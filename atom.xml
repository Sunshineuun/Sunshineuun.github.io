<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Minnie技术博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sunshineuun.github.io/"/>
  <updated>2018-02-01T03:29:29.938Z</updated>
  <id>https://sunshineuun.github.io/</id>
  
  <author>
    <name>邱胜明</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TDC书单</title>
    <link href="https://sunshineuun.github.io/2018/02/01/TDC%E4%B9%A6%E5%8D%95/"/>
    <id>https://sunshineuun.github.io/2018/02/01/TDC书单/</id>
    <published>2018-02-01T02:45:45.000Z</published>
    <updated>2018-02-01T03:29:29.938Z</updated>
    
    <content type="html"><![CDATA[<p><strong>为了保证资源能够充分利用，在书闲置之时，请各位及时还书。</strong><br><strong>可以在下方留言，邮箱，扣扣等方式告知，到我这里拿钥匙，或者我可以给你送过去。</strong><br><strong>感谢合作！</strong></p><ul><li>联系人：邱胜明</li><li>手机号码：15958624595</li><li>QQ：583853240</li><li>邮箱：qiushengming@tech-winning.com</li></ul><hr><table><thead><tr><th style="text-align:left">书名</th><th style="text-align:center">作者</th><th style="text-align:right">借书日期</th><th style="text-align:right">还书日期</th><th style="text-align:right">借书人</th></tr></thead><tbody><tr><td style="text-align:left">京东系统质量保障技术实战</td><td style="text-align:center">商城研发POP平台 著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">MongoDB实战（第二版）</td><td style="text-align:center">华中科技大学出版社</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Java多线程编程核心技术</td><td style="text-align:center">高洪岩</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">精通自动化测试框架设计</td><td style="text-align:center">陈冬严</td><td style="text-align:right">2018/1/31</td><td style="text-align:right">2018/2/22</td><td style="text-align:right">陈进美</td></tr><tr><td style="text-align:left">Web接口开发与自动化测试――基于Python语言</td><td style="text-align:center">虫师</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Selenium2自动化测试实战基于Python语言</td><td style="text-align:center">虫师</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Python核心编程（第3版）</td><td style="text-align:center">[美]WesleyChun著；孙波翔，李斌，李晗译</td><td style="text-align:right">2018/1/31</td><td style="text-align:right">2018/2/28</td><td style="text-align:right">吴维维</td></tr><tr><td style="text-align:left">Docker经典实例</td><td style="text-align:center">[美]戈阿冈（SébastienGoasguen）著；刘斌译</td><td style="text-align:right">2018/1/31</td><td style="text-align:right">2018/2/28</td><td style="text-align:right">吴维维</td></tr><tr><td style="text-align:left">深入浅出Node.js</td><td style="text-align:center">朴灵</td><td style="text-align:right">2018/2/1</td><td style="text-align:right"></td><td style="text-align:right">范健伟</td></tr><tr><td style="text-align:left">Spring源码深度解析</td><td style="text-align:center">郝佳</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">-</td><td style="text-align:right">杨浩</td></tr><tr><td style="text-align:left">大型网站系统与Java中间件实践</td><td style="text-align:center">曾宪杰</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">分布式Java应用：基础与实践</td><td style="text-align:center">林昊</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">深度学习入门之PyTorch</td><td style="text-align:center">廖星宇</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">TensorFlow：实战Google深度学习框架</td><td style="text-align:center">才云科技Caicloud，郑泽宇，顾思宇著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">TensorFlow技术解析与实战</td><td style="text-align:center">李嘉璇</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Redis开发与运维</td><td style="text-align:center">付磊</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/20</td><td style="text-align:right">于祥通</td></tr><tr><td style="text-align:left">分布式服务框架原理与实践</td><td style="text-align:center">李林锋</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/28</td><td style="text-align:right">田升</td></tr><tr><td style="text-align:left">Java性能权威指南</td><td style="text-align:center">奥克斯</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/20</td><td style="text-align:right">于祥通</td></tr><tr><td style="text-align:left">Redis开发与运维</td><td style="text-align:center">付磊，张益军著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">分布式服务架构：原理、设计与实战</td><td style="text-align:center">李艳鹏，杨彪著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">WebAPI的设计与开发</td><td style="text-align:center">水野贵明著；盛荣译</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/3/15</td><td style="text-align:right">万玉</td></tr><tr><td style="text-align:left">看透SpringMVC:源代码分析与实践</td><td style="text-align:center">韩路彪著</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/3/1</td><td style="text-align:right">尚梦思</td></tr><tr><td style="text-align:left">HTML5+CSS3+JavaScript从入门到精通（标准版</td><td style="text-align:center">未来科技著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">程序员的修炼——从优秀到卓越</td><td style="text-align:center">[美]Jeff,Atwood著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Oracle性能诊断艺术（第2版）</td><td style="text-align:center">[瑞士]ChristianAntognini著；王作佳，刘迪译</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">高性能MySQL（第3版）</td><td style="text-align:center">BaronSchwartz<br>PeterZaitsev<br>VadimTkachenko著；<br>宁海元，周振兴，彭立勋等译</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">疯狂SpringCloud微服务架构实战</td><td style="text-align:center">作者：杨恩雄</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/2/25</td><td style="text-align:right">李赏</td></tr><tr><td style="text-align:left">Node.js微服务</td><td style="text-align:center">DavidGonzalez著赵震一郑伟杰译</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;为了保证资源能够充分利用，在书闲置之时，请各位及时还书。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;可以在下方留言，邮箱，扣扣等方式告知，到我这里拿钥匙，或者我可以给你送过去。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;感谢合作！&lt;/strong&gt;&lt;/p&gt;
&lt;u
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mybatis Generator配置详解</title>
    <link href="https://sunshineuun.github.io/2018/01/31/Mybatis-Generator%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>https://sunshineuun.github.io/2018/01/31/Mybatis-Generator配置详解/</id>
    <published>2018-01-31T04:26:00.000Z</published>
    <updated>2018-01-31T04:39:29.774Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Mybatis-Generator配置详解"><a href="#Mybatis-Generator配置详解" class="headerlink" title="Mybatis Generator配置详解"></a>Mybatis Generator配置详解</h5><h6 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h6><p>使用这个插件可以快速生成一些代码,包含<code>实体类/Mapper接口/*Mapper.xml文件</code>。笔者用IDEA开发环境，利用MAVEN进行构建。<br>参考官方文档点击<a href="http://www.mybatis.org/generator/running/runningWithMaven.html" target="_blank" rel="noopener">传送门</a>前往。</p><h6 id="POM文件配置如下"><a href="#POM文件配置如下" class="headerlink" title="POM文件配置如下"></a>POM文件配置如下</h6><p>注意,<code>plugins</code>标签是<code>build</code>标签的子标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;!--Mybatis-generator插件,用于自动生成Mapper和POJO--&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;!--配置文件的位置--&gt;</span><br><span class="line">          &lt;configurationFile&gt;yourLocation/mybatis-generator-config.xml&lt;/configurationFile&gt;</span><br><span class="line">          &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">          &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">        &lt;executions&gt;</span><br><span class="line">          &lt;execution&gt;</span><br><span class="line">            &lt;id&gt;Generate MyBatis Artifacts&lt;/id&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;generate&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">          &lt;/execution&gt;</span><br><span class="line">        &lt;/executions&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">          &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br></pre></td></tr></table></figure></p><h6 id="Mybatis-Generator配置如下"><a href="#Mybatis-Generator配置如下" class="headerlink" title="Mybatis Generator配置如下"></a>Mybatis Generator配置如下</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">  PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;!-- 配置生成器 --&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">&lt;!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用$&#123;propertyKey&#125;的方式来引用配置项</span><br><span class="line">    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties        </span><br><span class="line">    url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.</span><br><span class="line">    注意，两个属性只能选址一个;</span><br><span class="line"></span><br><span class="line">    另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用</span><br><span class="line">&lt;properties resource=&quot;&quot; url=&quot;&quot; /&gt;</span><br><span class="line"> --&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!-- 在MBG工作的时候，需要额外加载的依赖包</span><br><span class="line">     location属性指明加载jar/zip包的全路径</span><br><span class="line">&lt;classPathEntry location=&quot;/Program Files/IBM/SQLLIB/java/db2java.zip&quot; /&gt;</span><br><span class="line">  --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- </span><br><span class="line">    context:生成一组对象的环境 </span><br><span class="line">    id:必选，上下文id，用于在生成错误时提示</span><br><span class="line">    defaultModelType:指定生成对象的样式</span><br><span class="line">        1，conditional：类似hierarchical；</span><br><span class="line">        2，flat：所有内容（主键，blob）等全部生成在一个对象中；</span><br><span class="line">        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)</span><br><span class="line">    targetRuntime:</span><br><span class="line">        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；</span><br><span class="line">        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；</span><br><span class="line">    introspectedColumnImpl：类全限定名，用于扩展MBG</span><br><span class="line">--&gt;</span><br><span class="line">&lt;context id=&quot;mysql&quot; defaultModelType=&quot;hierarchical&quot; targetRuntime=&quot;MyBatis3Simple&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；</span><br><span class="line">        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;property name=&quot;autoDelimitKeywords&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">    &lt;!-- 生成的Java文件的编码 --&gt;</span><br><span class="line">    &lt;property name=&quot;javaFileEncoding&quot; value=&quot;UTF-8&quot;/&gt;</span><br><span class="line">    &lt;!-- 格式化java代码 --&gt;</span><br><span class="line">    &lt;property name=&quot;javaFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultJavaFormatter&quot;/&gt;</span><br><span class="line">    &lt;!-- 格式化XML代码 --&gt;</span><br><span class="line">    &lt;property name=&quot;xmlFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultXmlFormatter&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； --&gt;</span><br><span class="line">    &lt;property name=&quot;beginningDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;endingDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 必须要有的，使用这个配置链接数据库</span><br><span class="line">        @TODO:是否可以扩展</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql:///pss&quot; userId=&quot;root&quot; password=&quot;admin&quot;&gt;</span><br><span class="line">        &lt;!-- 这里面可以设置property属性，每一个property属性都设置到配置的Driver上 --&gt;</span><br><span class="line">    &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- java类型处理器 </span><br><span class="line">        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；</span><br><span class="line">        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型； </span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;javaTypeResolver type=&quot;org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl&quot;&gt;</span><br><span class="line">        &lt;!-- </span><br><span class="line">            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型</span><br><span class="line">            false：默认,</span><br><span class="line">                scale&gt;0;length&gt;18：使用BigDecimal;</span><br><span class="line">                scale=0;length[10,18]：使用Long；</span><br><span class="line">                scale=0;length[5,9]：使用Integer；</span><br><span class="line">                scale=0;length&lt;5：使用Short；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">    &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- java模型创建器，是必须要的元素</span><br><span class="line">        负责：1，key类（见context的defaultModelType）；2，java类；3，查询类</span><br><span class="line">        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；</span><br><span class="line">        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;javaModelGenerator targetPackage=&quot;com._520it.mybatis.domain&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">        &lt;!--  for MyBatis3/MyBatis3Simple</span><br><span class="line">            自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- for MyBatis3 / MyBatis3Simple</span><br><span class="line">            是否创建一个不可变的类，如果为true，</span><br><span class="line">            那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 设置一个根对象，</span><br><span class="line">            如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">            注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：</span><br><span class="line">                1，属性名相同，类型相同，有相同的getter/setter方法；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;rootClass&quot; value=&quot;com._520it.mybatis.domain.BaseDomain&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">        &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 生成SQL map的XML文件生成器，</span><br><span class="line">        注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），</span><br><span class="line">            或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置</span><br><span class="line">        targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;sqlMapGenerator targetPackage=&quot;com._520it.mybatis.mapper&quot; targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">        &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口 </span><br><span class="line">        targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：</span><br><span class="line">            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；</span><br><span class="line">            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；</span><br><span class="line">            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；</span><br><span class="line">        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;javaClientGenerator targetPackage=&quot;com._520it.mybatis.mapper&quot; type=&quot;ANNOTATEDMAPPER&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">        &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查</span><br><span class="line">        &lt;property name=&quot;rootInterface&quot; value=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line">    &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素</span><br><span class="line">        选择的table会生成一下文件：</span><br><span class="line">        1，SQL map文件</span><br><span class="line">        2，生成一个主键类；</span><br><span class="line">        3，除了BLOB和主键的其他字段的类；</span><br><span class="line">        4，包含BLOB的类；</span><br><span class="line">        5，一个用户生成动态查询的条件类（selectByExample, deleteByExample），可选；</span><br><span class="line">        6，Mapper接口（可选）</span><br><span class="line"></span><br><span class="line">        tableName（必要）：要生成对象的表名；</span><br><span class="line">        注意：大小写敏感问题。正常情况下，MBG会自动的去识别数据库标识符的大小写敏感度，在一般情况下，MBG会</span><br><span class="line">            根据设置的schema，catalog或tablename去查询数据表，按照下面的流程：</span><br><span class="line">            1，如果schema，catalog或tablename中有空格，那么设置的是什么格式，就精确的使用指定的大小写格式去查询；</span><br><span class="line">            2，否则，如果数据库的标识符使用大写的，那么MBG自动把表名变成大写再查找；</span><br><span class="line">            3，否则，如果数据库的标识符使用小写的，那么MBG自动把表名变成小写再查找；</span><br><span class="line">            4，否则，使用指定的大小写格式查询；</span><br><span class="line">        另外的，如果在创建表的时候，使用的&quot;&quot;把数据库对象规定大小写，就算数据库标识符是使用的大写，在这种情况下也会使用给定的大小写来创建表名；</span><br><span class="line">        这个时候，请设置delimitIdentifiers=&quot;true&quot;即可保留大小写格式；</span><br><span class="line"></span><br><span class="line">        可选：</span><br><span class="line">        1，schema：数据库的schema；</span><br><span class="line">        2，catalog：数据库的catalog；</span><br><span class="line">        3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName</span><br><span class="line">        4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；</span><br><span class="line">        5，enableInsert（默认true）：指定是否生成insert语句；</span><br><span class="line">        6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；</span><br><span class="line">        7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；</span><br><span class="line">        8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；</span><br><span class="line">        9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；</span><br><span class="line">        10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；</span><br><span class="line">        11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；</span><br><span class="line">        12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；</span><br><span class="line">        13，modelType：参考context元素的defaultModelType，相当于覆盖；</span><br><span class="line">        14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）</span><br><span class="line">        15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性</span><br><span class="line"></span><br><span class="line">        注意，table里面很多参数都是对javaModelGenerator，context等元素的默认属性的一个复写；</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;table tableName=&quot;userinfo&quot; &gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考 javaModelGenerator 的 constructorBased属性--&gt;</span><br><span class="line">        &lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">        &lt;property name=&quot;ignoreQualifiersAtRuntime&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考 javaModelGenerator 的 immutable 属性 --&gt;</span><br><span class="line">        &lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 --&gt;</span><br><span class="line">        &lt;property name=&quot;modelOnly&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考 javaModelGenerator 的 rootClass 属性 </span><br><span class="line">        &lt;property name=&quot;rootClass&quot; value=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考javaClientGenerator 的  rootInterface 属性</span><br><span class="line">        &lt;property name=&quot;rootInterface&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置了runtimeCatalog，那么在生成的SQL中，使用该指定的catalog，而不是table元素上的catalog </span><br><span class="line">        &lt;property name=&quot;runtimeCatalog&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置了runtimeSchema，那么在生成的SQL中，使用该指定的schema，而不是table元素上的schema </span><br><span class="line">        &lt;property name=&quot;runtimeSchema&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置了runtimeTableName，那么在生成的SQL中，使用该指定的tablename，而不是table元素上的tablename </span><br><span class="line">        &lt;property name=&quot;runtimeTableName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 注意，该属性只针对MyBatis3Simple有用；</span><br><span class="line">            如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;selectAllOrderByClause&quot; value=&quot;age desc,username asc&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate --&gt;</span><br><span class="line">        &lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- generatedKey用于生成生成主键的方法，</span><br><span class="line">            如果设置了该元素，MBG会在生成的&lt;insert&gt;元素中生成一条正确的&lt;selectKey&gt;元素，该元素可选</span><br><span class="line">            column:主键的列名；</span><br><span class="line">            sqlStatement：要生成的selectKey语句，有以下可选项：</span><br><span class="line">                Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1</span><br><span class="line">                Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()</span><br><span class="line">                Informix  :相当于selectKey的SQL为：select dbinfo(&apos;sqlca.sqlerrd1&apos;) from systables where tabid=1</span><br><span class="line">                MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()</span><br><span class="line">                SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()</span><br><span class="line">                SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY</span><br><span class="line">                JDBC      :相当于在生成的insert元素上添加useGeneratedKeys=&quot;true&quot;和keyProperty属性</span><br><span class="line">        &lt;generatedKey column=&quot;&quot; sqlStatement=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- </span><br><span class="line">            该元素会在根据表中列名计算对象属性名之前先重命名列名，非常适合用于表中的列都有公用的前缀字符串的时候，</span><br><span class="line">            比如列名为：CUST_ID,CUST_NAME,CUST_EMAIL,CUST_ADDRESS等；</span><br><span class="line">            那么就可以设置searchString为&quot;^CUST_&quot;，并使用空白替换，那么生成的Customer对象中的属性名称就不是</span><br><span class="line">            custId,custName等，而是先被替换为ID,NAME,EMAIL,然后变成属性：id，name，email；</span><br><span class="line"></span><br><span class="line">            注意，MBG是使用java.util.regex.Matcher.replaceAll来替换searchString和replaceString的，</span><br><span class="line">            如果使用了columnOverride元素，该属性无效；</span><br><span class="line"></span><br><span class="line">        &lt;columnRenamingRule searchString=&quot;&quot; replaceString=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         &lt;!-- 用来修改表中某个列的属性，MBG会使用修改后的列来生成domain的属性；</span><br><span class="line">             column:要重新设置的列名；</span><br><span class="line">             注意，一个table元素中可以有多个columnOverride元素哈~</span><br><span class="line">          --&gt;</span><br><span class="line">         &lt;columnOverride column=&quot;username&quot;&gt;</span><br><span class="line">             &lt;!-- 使用property属性来指定列要生成的属性名称 --&gt;</span><br><span class="line">             &lt;property name=&quot;property&quot; value=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- javaType用于指定生成的domain的属性类型，使用类型的全限定名</span><br><span class="line">             &lt;property name=&quot;javaType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">              --&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- jdbcType用于指定该列的JDBC类型 </span><br><span class="line">             &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">              --&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- typeHandler 用于指定该列使用到的TypeHandler，如果要指定，配置类型处理器的全限定名</span><br><span class="line">                 注意，mybatis中，不会生成到mybatis-config.xml中的typeHandler</span><br><span class="line">                 只会生成类似：where id = #&#123;id,jdbcType=BIGINT,typeHandler=com._520it.mybatis.MyTypeHandler&#125;的参数描述</span><br><span class="line">             &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- 参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line">             &lt;property name=&quot;delimitedColumnName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">              --&gt;</span><br><span class="line">         &lt;/columnOverride&gt;</span><br><span class="line"></span><br><span class="line">         &lt;!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现 </span><br><span class="line">             column:指定要忽略的列的名字；</span><br><span class="line">             delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line"></span><br><span class="line">             注意，一个table元素中可以有多个ignoreColumn元素</span><br><span class="line">         &lt;ignoreColumn column=&quot;deptId&quot; delimitedColumnName=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/context&gt;</span><br><span class="line"></span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Mybatis-Generator配置详解&quot;&gt;&lt;a href=&quot;#Mybatis-Generator配置详解&quot; class=&quot;headerlink&quot; title=&quot;Mybatis Generator配置详解&quot;&gt;&lt;/a&gt;Mybatis Generator配置详解&lt;/
      
    
    </summary>
    
    
      <category term="Mybatis" scheme="https://sunshineuun.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>火狐浏览器打开新页签不断刷新</title>
    <link href="https://sunshineuun.github.io/2018/01/30/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E6%96%B0%E9%A1%B5%E7%AD%BE%E4%B8%8D%E6%96%AD%E5%88%B7%E6%96%B0/"/>
    <id>https://sunshineuun.github.io/2018/01/30/浏览器打开新页签不断刷新/</id>
    <published>2018-01-30T02:09:07.000Z</published>
    <updated>2018-01-30T02:15:10.808Z</updated>
    
    <content type="html"><![CDATA[<h5 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h5><p>用旧版本覆盖了新版本的火狐，导致新标签页数据损坏。</p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>地址栏输入<code>about:support</code>根据提示打开<strong>配置文件夹</strong>，删除<strong>storage文件夹、及其已storage为名的文件</strong>并且重启火狐。笔者亲测有效。</p><p><img src="/images/pasted-41.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h5&gt;&lt;p&gt;用旧版本覆盖了新版本的火狐，导致新标签页数据损坏。&lt;/p&gt;
&lt;h5 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;hea
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Oracle数值类型主键自增长</title>
    <link href="https://sunshineuun.github.io/2018/01/29/Oracle%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B8%BB%E9%94%AE%E8%87%AA%E5%A2%9E%E9%95%BF/"/>
    <id>https://sunshineuun.github.io/2018/01/29/Oracle数值类型主键自增长/</id>
    <published>2018-01-29T05:47:00.000Z</published>
    <updated>2018-01-29T05:54:00.971Z</updated>
    
    <content type="html"><![CDATA[<h5 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> CREATE TABLE K_USER (</span><br><span class="line">  ID       NUMBER PRIMARY KEY,</span><br><span class="line">  USER_NAME VARCHAR(45) NOT NULL,</span><br><span class="line">  pd VARCHAR(45) NOT NULL,</span><br><span class="line">  ENABLED  NUMBER DEFAULT 1 NOT NULL</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="创建自增序列"><a href="#创建自增序列" class="headerlink" title="创建自增序列"></a>创建自增序列</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE SEQUENCE K_USER_ID_AUTOINC -- 序列的名称</span><br><span class="line"> MINVALUE 1 -- 最小值</span><br><span class="line"> MAXVALUE 99999999 -- 最大值</span><br><span class="line"> START WITH 1 -- 从多少开始</span><br><span class="line"> INCREMENT BY 1 -- 每次序列加多少</span><br><span class="line"> NOCACHE;</span><br></pre></td></tr></table></figure><h5 id="创建序列"><a href="#创建序列" class="headerlink" title="创建序列"></a>创建序列</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE TRIGGER K_USER_ID_TRIGGER -- 监听的名称</span><br><span class="line"> BEFORE INSERT ON K_USER FOR EACH ROW WHEN (new.ID IS NULL)</span><br><span class="line"> -- 在插入循环ID为空的列</span><br><span class="line">   BEGIN</span><br><span class="line">     SELECT K_USER_ID_AUTOINC.nextval INTO :new.id FROM dual;</span><br><span class="line">   END;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;创建表&quot;&gt;&lt;a href=&quot;#创建表&quot; class=&quot;headerlink&quot; title=&quot;创建表&quot;&gt;&lt;/a&gt;创建表&lt;/h5&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="Oracle" scheme="https://sunshineuun.github.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu常用操作命令</title>
    <link href="https://sunshineuun.github.io/2018/01/26/untu%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://sunshineuun.github.io/2018/01/26/untu常用操作命令/</id>
    <published>2018-01-26T05:09:17.000Z</published>
    <updated>2018-01-26T06:08:29.594Z</updated>
    
    <content type="html"><![CDATA[<h5 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h5><h6 id="文件进入"><a href="#文件进入" class="headerlink" title="文件进入"></a>文件进入</h6><ol><li><code>cd 路径</code>;</li><li><code>cd ..</code>; 返回上一个文件夹</li><li><code>sudo</code>; 获取root权限，需要输入root权限的密码。</li></ol><h6 id="文件创建"><a href="#文件创建" class="headerlink" title="文件创建"></a>文件创建</h6><ol><li><code>mkdir 名称</code>; 新建一个文件夹</li><li><code>touch 名称</code>; 新建一个空文件。</li></ol><h6 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h6><ol><li><code>rmdir 目录名</code>; 删除一个空的文件夹(目录)</li><li><code>rm -rf 目录名</code>; 删除一个非空的文件夹(目录)</li><li><code>rm 文件名,文件名</code>; 删除多个文件</li></ol><h6 id="文件复制"><a href="#文件复制" class="headerlink" title="文件复制"></a>文件复制</h6><ol><li><code>cp 文件名 目标路径</code>; 拷贝文件到目标路径下</li><li><code>cp -i</code>; 拷贝，同名文件存在时，输出[yes/no]的询问</li><li><code>cp -f</code>; 强制复制文件,如果同名不询问</li></ol><h6 id="文件剪切"><a href="#文件剪切" class="headerlink" title="文件剪切"></a>文件剪切</h6><ol><li><code>mv jdk1.8.0_20/ /usr/lib/jvm///</code>；可剪切文件目录</li></ol><h6 id="常用解压，安装，文件更新"><a href="#常用解压，安装，文件更新" class="headerlink" title="常用解压，安装，文件更新"></a>常用解压，安装，文件更新</h6><ol><li><code>tar -zxvf  *.tar.gz</code> 解压tar.gz格式的文件</li><li><code>source *.install</code> 安装install格式的安装包</li><li><code>sh 路径/x.sh</code> 安装sh格式的文件</li><li><code>apt-get upgrade</code> 更新已安装的包</li><li><code>apt-get update</code> 更新源</li></ol><h5 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h5><ol><li><code>netstat -nltp</code> 查看启动的进程</li><li><code>kill -9 pid</code>，参数-9强制杀进程，参数pid对应的进程pid。</li><li>内存查询命令<code>free</code>命令<ul><li>功能说明: 显示内存状态。</li><li>语法: <code>free [-bkmotV][-s ]</code>。</li><li>补充说明: free指令会显示内存的使用情况，包括实体内存，虚拟的交换文档内存，共享内存区段，连同系统核心使用的缓冲区等。</li><li>参数：<br>　　        1. -b 　   以Byte为单位显示内存使用情况。<br>　　        2. -k 　  以KB为单位显示内存使用情况。<br>　　        3. -m 　 以MB为单位显示内存使用情况。<br>　　        4. -o 　  不显示缓冲区调节列。<br>　　        5. -s 　  持续观察内存使用状况。<br>　　        6. -t 　   显示内存总和列。<br>　　        7. -V 　 显示版本信息。</li></ul></li></ol><h5 id="开关机操作"><a href="#开关机操作" class="headerlink" title="开关机操作"></a>开关机操作</h5><ol><li><code>reboot</code> 重启</li><li><code>shutdown -r now</code>; 立即重启，需root权限</li><li><code>shutdown -r 10</code>,;10分钟后自动重启，时间自由调整，单位分，需root权限</li><li><code>halt</code>立即关机</li><li><code>poweroff</code>立刻关机</li><li><code>shutdown -h now</code>立刻关机</li><li><code>shutdown -h 10</code>;10分钟后自动关机，时间自由调整，单位分，需root权限</li><li><p><code>shutdown -c</code>;取消关机重启</p><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><h6 id="Ubuntu实时查看tomcat运行log"><a href="#Ubuntu实时查看tomcat运行log" class="headerlink" title="Ubuntu实时查看tomcat运行log"></a>Ubuntu实时查看tomcat运行log</h6><ul><li>找到tomcat安装目录：cd tomcat/logs</li><li>tail -f catalina.out</li><li>ctrl+c 退出</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h5&gt;&lt;h6 id=&quot;文件进入&quot;&gt;&lt;a href=&quot;#文件进入&quot; class=&quot;headerlink&quot; title=&quot;文件进入&quot;&gt;&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins Install</title>
    <link href="https://sunshineuun.github.io/2018/01/26/Jenkins-Install/"/>
    <id>https://sunshineuun.github.io/2018/01/26/Jenkins-Install/</id>
    <published>2018-01-26T04:51:00.000Z</published>
    <updated>2018-01-26T05:02:43.868Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>Jenkins自动化部署打包系统，百度百科<a href="https://baike.baidu.com/item/Jenkins/10917210?fr=aladdin" target="_blank" rel="noopener">传送门</a><br>笔者安装在Ubuntu环境上。</p><h5 id="Jenkins-Install"><a href="#Jenkins-Install" class="headerlink" title="Jenkins Install"></a>Jenkins Install</h5><p><a href="http://www.linuxidc.com/Linux/2016-12/138290.htm" target="_blank" rel="noopener">传送门</a></p><h5 id="Jenkins-UnInstall"><a href="#Jenkins-UnInstall" class="headerlink" title="Jenkins UnInstall"></a>Jenkins UnInstall</h5><p><a href="https://www.cnblogs.com/wangcp-2014/p/6978245.html" target="_blank" rel="noopener">传送门</a></p><h5 id="Git-Install"><a href="#Git-Install" class="headerlink" title="Git Install"></a>Git Install</h5><p>执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git</span><br></pre></td></tr></table></figure></p><h5 id="Maven-Install"><a href="#Maven-Install" class="headerlink" title="Maven Install"></a>Maven Install</h5><ul><li>下载Maven的安装包</li><li>安装命令如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 解压</span><br><span class="line">tar zxvf apache-maven-3.3.9.bin.tar.gz</span><br><span class="line"></span><br><span class="line"># 增加环境变量</span><br><span class="line">vi /etc/profile</span><br><span class="line"># 在打开文件尾部增加以下内容</span><br><span class="line">M2_HOME=/usr/local/apache-maven-3.3.9 # 此路径是你maven解压缩文件的路径。</span><br><span class="line">PATH=$M2_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;Jenkins自动化部署打包系统，百度百科&lt;a href=&quot;https://baike.baidu.com/item/Jenkins/109
      
    
    </summary>
    
    
      <category term="JenKins" scheme="https://sunshineuun.github.io/tags/JenKins/"/>
    
      <category term="自动化构建" scheme="https://sunshineuun.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Maven打包问题</title>
    <link href="https://sunshineuun.github.io/2018/01/26/Maven%E6%89%93%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>https://sunshineuun.github.io/2018/01/26/Maven打包问题/</id>
    <published>2018-01-26T03:32:48.000Z</published>
    <updated>2018-01-26T03:35:38.816Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Maven所有的打包都是依赖Maven仓库的，并不依赖项目。</li><li>每个Maven都需要依赖到具体的项目。</li><li>关于Maven<code>parent</code>的节点需要学习。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;Maven所有的打包都是依赖Maven仓库的，并不依赖项目。&lt;/li&gt;
&lt;li&gt;每个Maven都需要依赖到具体的项目。&lt;/li&gt;
&lt;li&gt;关于Maven&lt;code&gt;parent&lt;/code&gt;的节点需要学习。&lt;/li&gt;
&lt;/ol&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spring Boot使用Druid数据源</title>
    <link href="https://sunshineuun.github.io/2018/01/24/pring-Boot%E4%BD%BF%E7%94%A8Druid%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    <id>https://sunshineuun.github.io/2018/01/24/pring-Boot使用Druid数据源/</id>
    <published>2018-01-24T12:45:00.000Z</published>
    <updated>2018-01-24T13:39:19.219Z</updated>
    
    <content type="html"><![CDATA[<h6 id="添加pom文件依赖"><a href="#添加pom文件依赖" class="headerlink" title="添加pom文件依赖"></a>添加pom文件依赖</h6><p>数据库驱动的jar，视你用的是什么数据库添加对应pom依赖。我这里用oracle数据库所以就添加oracle的依赖。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- alibaba的druid数据库连接池 --&gt;</span><br><span class="line"> &lt;dependency&gt;</span><br><span class="line"> &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.1.6&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.oracle/ojdbc14 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.oracle&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;ojdbc14&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;10.2.0.4.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><h5 id="配置yml文件中druid数据库连接池"><a href="#配置yml文件中druid数据库连接池" class="headerlink" title="配置yml文件中druid数据库连接池"></a>配置yml文件中druid数据库连接池</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">    datasource:</span><br><span class="line">        name: test</span><br><span class="line">        username: root</span><br><span class="line">        password: root</span><br><span class="line">        url: jdbc:oracle:thin:@192.168.16.113:1521:sunshine</span><br><span class="line">        driver-class-name: oracle.jdbc.driver.OracleDriver # 数据库驱动配置</span><br><span class="line">        type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">        # aliyun数据连接池配置</span><br><span class="line">        druid:</span><br><span class="line">          username: root</span><br><span class="line">          password: root</span><br><span class="line">          # 初始化连接数</span><br><span class="line">          initial-size: 1</span><br><span class="line">          # 最小连接数</span><br><span class="line">          min-idle: 3</span><br><span class="line">          # 最大连接数</span><br><span class="line">          max-active: 20</span><br><span class="line">          # 配置获取连接等待超时的时间</span><br><span class="line">          max-wait: 60000</span><br><span class="line">          # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span><br><span class="line">          time-between-eviction-runs-millis: 60000</span><br><span class="line">          # 配置一个连接在池中最小生存的时间，单位是毫秒</span><br><span class="line">          min-evictable-idle-time-millis: 30000</span><br><span class="line">          validation-query: select&apos;x&apos;</span><br><span class="line">          test-while-idle: true</span><br><span class="line">          test-on-borrow: false</span><br><span class="line">          test-on-return: false</span><br><span class="line">          # 打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">          pool-prepared-statements: true</span><br><span class="line">          max-pool-prepared-statement-per-connection-size: 20</span><br><span class="line">          # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，&apos;wall&apos;用于防火墙</span><br><span class="line">          filters: stat,wall,slf4j</span><br><span class="line">          # 通过connectProperties属性来打开mergeSql功能；慢SQL记录</span><br><span class="line">          connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span><br><span class="line">          # 合并多个DruidDataSource的监控数据</span><br><span class="line">          useGlobalDataSourceStat: true</span><br></pre></td></tr></table></figure><h5 id="配置Druid的监控统计功能"><a href="#配置Druid的监控统计功能" class="headerlink" title="配置Druid的监控统计功能"></a>配置Druid的监控统计功能</h5><ul><li>@Confing注解 配置类，代码见<a href="/files/DruidConfiguration.java">DruidConfiguration.java</a></li><li>基于注解<br>首先在启动类上加上注解：@ServletComponentScan使Spring能够扫描到我们自己编写的servlet和filter。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//druid数据源状态监控.</span><br><span class="line">@WebServlet(urlPatterns = &quot;/druid/*&quot;,</span><br><span class="line">    initParams = &#123;</span><br><span class="line">        // IP白名单 (没有配置或者为空，则允许所有访问)</span><br><span class="line">        @WebInitParam(name = &quot;allow&quot;, value = &quot;192.168.1.72,127.0.0.1&quot;),</span><br><span class="line">        // IP黑名单 (存在共同时，deny优先于allow)</span><br><span class="line">        @WebInitParam(name = &quot;deny&quot;, value = &quot;192.168.1.73&quot;),</span><br><span class="line">        // 用户名</span><br><span class="line">        @WebInitParam(name = &quot;loginUsername&quot;, value = &quot;admin&quot;),</span><br><span class="line">        // 密码</span><br><span class="line">        @WebInitParam(name = &quot;loginPassword&quot;, value = &quot;admin&quot;),</span><br><span class="line">        // 禁用HTML页面上的“Reset All”功能</span><br><span class="line">        @WebInitParam(name = &quot;resetEnable&quot;, value = &quot;false&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line">public class DruidStatViewServlet extends StatViewServlet &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// druid过滤器. </span><br><span class="line">@WebFilter(filterName = &quot;druidWebStatFilter&quot;, urlPatterns = &quot;/*&quot;,</span><br><span class="line">    initParams = &#123;</span><br><span class="line">        // 忽略资源</span><br><span class="line">        @WebInitParam(name = &quot;exclusions&quot;, </span><br><span class="line">       value=&quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line">public class DruidStatFilter extends WebStatFilter &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h5><p><img src="/images/pasted-36.png" alt="/images/pasted-36.png"></p><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><p><a href="https://segmentfault.com/a/1190000009132815" target="_blank" rel="noopener">Spring Boot 使用 Druid 数据库连接池</a><br><a href="https://github.com/alibaba/druid" target="_blank" rel="noopener">Druid的官方地址</a><br><a href="https://www.oschina.net/p/druid" target="_blank" rel="noopener">JDBC连接池、监控组件 Druid</a></p><h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><h6 id="property-for-user-to-setup"><a href="#property-for-user-to-setup" class="headerlink" title="(*) property for user to setup"></a>(*) property for user to setup</h6><p>查看数据源的时候出现<code>(*) property for user to setup</code>错误信息。<br>原因未初始化数据源。<a href="https://github.com/alibaba/druid/issues/1802" target="_blank" rel="noopener">详情传送门</a><br><img src="/images/pasted-37.png" alt="upload successful"><br>但是笔者的解决方案，多点几下<strong>数据源</strong>按钮，就能显示出数据了，感觉这个界面还是有问题的，目前将就着用，不受影响。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;添加pom文件依赖&quot;&gt;&lt;a href=&quot;#添加pom文件依赖&quot; class=&quot;headerlink&quot; title=&quot;添加pom文件依赖&quot;&gt;&lt;/a&gt;添加pom文件依赖&lt;/h6&gt;&lt;p&gt;数据库驱动的jar，视你用的是什么数据库添加对应pom依赖。我这里用oracle数据
      
    
    </summary>
    
    
      <category term="Spring Boot" scheme="https://sunshineuun.github.io/tags/Spring-Boot/"/>
    
      <category term="Druid" scheme="https://sunshineuun.github.io/tags/Druid/"/>
    
  </entry>
  
  <entry>
    <title>Maven配置阿里云镜像库</title>
    <link href="https://sunshineuun.github.io/2018/01/24/Maven%E4%BD%BF%E7%94%A8Aliyun%E9%95%9C%E5%83%8F%E5%BA%93/"/>
    <id>https://sunshineuun.github.io/2018/01/24/Maven使用Aliyun镜像库/</id>
    <published>2018-01-24T08:57:00.000Z</published>
    <updated>2018-01-24T09:01:29.004Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>profile &gt; repositories</code>节点下增加阿里的镜像库<br><img src="/images/pasted-35.png" alt="upload successful"></p><p>代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;repository&gt;</span><br><span class="line"> &lt;id&gt;aliyunmaven&lt;/id&gt;</span><br><span class="line">&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line">&lt;/repository&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在&lt;code&gt;profile &amp;gt; repositories&lt;/code&gt;节点下增加阿里的镜像库&lt;br&gt;&lt;img src=&quot;/images/pasted-35.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;代码如下&lt;br&gt;&lt;figure cl
      
    
    </summary>
    
      <category term="Maven" scheme="https://sunshineuun.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://sunshineuun.github.io/tags/Maven/"/>
    
      <category term="Aliyun" scheme="https://sunshineuun.github.io/tags/Aliyun/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot项目创建</title>
    <link href="https://sunshineuun.github.io/2018/01/24/ring-boot%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/"/>
    <id>https://sunshineuun.github.io/2018/01/24/ring-boot项目创建/</id>
    <published>2018-01-24T07:10:00.000Z</published>
    <updated>2018-01-24T08:46:47.874Z</updated>
    
    <content type="html"><![CDATA[<h5 id="使用IDEA创建项目"><a href="#使用IDEA创建项目" class="headerlink" title="使用IDEA创建项目"></a>使用IDEA创建项目</h5><ul><li><p>New Project，选择<code>Spring Initializr</code>，Next，Next<br><img src="/images/pasted-33.png" alt="upload successful"></p></li><li><p>选择相关集成的JAR包<br><img src="/images/pasted-34.png" alt="upload successful"></p></li></ul><h6 id="Core"><a href="#Core" class="headerlink" title="Core"></a>Core</h6><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>DevTools</td><td style="text-align:center">热部署</td><td style="text-align:center"><a href="http://blog.csdn.net/cl_andywin/article/details/53781737?ABstrategy=codes_snippets_optimize_v3" target="_blank" rel="noopener">详情前往</a></td></tr><tr><td>Security</td><td style="text-align:center">权限控制</td><td style="text-align:center">-</td></tr><tr><td>Lombok</td><td style="text-align:center">代码模板，省略了get/set的方法，IDEA中有Lombok的插件</td><td style="text-align:center">-</td></tr><tr><td>Configration Processor</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Session</td><td style="text-align:center">分布式Session共享</td><td style="text-align:center">-</td></tr><tr><td>Cache</td><td style="text-align:center">缓存，具体位置</td><td style="text-align:center"><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-caching.html" target="_blank" rel="noopener">详情前往</a></td></tr><tr><td>Validation</td><td style="text-align:center">后端的数据校验</td><td style="text-align:center">-</td></tr><tr><td>Retry</td><td style="text-align:center">spring熔断机制</td><td style="text-align:center">-</td></tr><tr><td>JTA</td><td style="text-align:center">分布式事务处理，Atomikos,Bitronix,Narayana</td><td style="text-align:center">-</td></tr><tr><td>Aspects</td><td style="text-align:center">AOP处理</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Web</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Rest Repositories</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Rest Repositories HAL Browser</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>HATEOAS</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Web Services</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Jersey JAX-RS</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Websocket</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>REST Docs</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Vaadin</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Apache CXF</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Ratpack</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Mobile</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Keycloak</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Template-Engines"><a href="#Template-Engines" class="headerlink" title="Template Engines"></a>Template Engines</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Yhymeleaf</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Freemarker</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Mustache</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Groovy Templates</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>JPA</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>MySql</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>H2</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>JDBC</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Mybatis</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>PostgreSQL</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>SQL Server</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>HSQLDB</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Apache Derby</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Liquibase</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Flyway</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>JOOQ</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Redis</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>MongoDB</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Reactive Redis</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Reactive MongoDB</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Embedded MongoDB</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Elasticsearch</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Solr</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cassandra</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Couchbase</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Neo4j</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Gemfire</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Core-分布式核心"><a href="#Cloud-Core-分布式核心" class="headerlink" title="Cloud Core-分布式核心"></a>Cloud Core-分布式核心</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Cloud Connectors</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cloud Bootstrap</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cloud Security</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cloud OAuth2</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cloud Task</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Config-分布式配置中心"><a href="#Cloud-Config-分布式配置中心" class="headerlink" title="Cloud Config-分布式配置中心"></a>Cloud Config-分布式配置中心</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Cloud Client</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cloud Server</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Vault Configuration</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Zookeeper Configuration</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Consul Configuration</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Discovery-分布式服务注册"><a href="#Cloud-Discovery-分布式服务注册" class="headerlink" title="Cloud Discovery-分布式服务注册"></a>Cloud Discovery-分布式服务注册</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Zookeeper Discovery</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Routing-动态数据路由"><a href="#Cloud-Routing-动态数据路由" class="headerlink" title="Cloud Routing-动态数据路由"></a>Cloud Routing-动态数据路由</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Zuul</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Ribbon</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Feign</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Circuit-Breaker-熔断器"><a href="#Cloud-Circuit-Breaker-熔断器" class="headerlink" title="Cloud Circuit Breaker-熔断器"></a>Cloud Circuit Breaker-熔断器</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Hystrix</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Turbine</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Tracing-分布式追踪器"><a href="#Cloud-Tracing-分布式追踪器" class="headerlink" title="Cloud Tracing-分布式追踪器"></a>Cloud Tracing-分布式追踪器</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Zipkin UI</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Zipkin Stream</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Zipkin Client</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Sleuth Stream</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="Cloud-Messaging-分布式消息总线"><a href="#Cloud-Messaging-分布式消息总线" class="headerlink" title="Cloud Messaging-分布式消息总线"></a>Cloud Messaging-分布式消息总线</h5><table><thead><tr><th>工具名称</th><th style="text-align:center">说明</th><th style="text-align:center">参考地址</th></tr></thead><tbody><tr><td>Cloud Bus Kafka</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Cloud Bus AMQP</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Stream Binder Rabbit</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td>Stream Binder Kafka</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table><h5 id="以下省略一部分，都是些看不懂的东西。"><a href="#以下省略一部分，都是些看不懂的东西。" class="headerlink" title="以下省略一部分，都是些看不懂的东西。"></a>以下省略一部分，都是些看不懂的东西。</h5><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><p><a href="https://www.jetbrains.com/help/idea/2016.3/creating-spring-boot-projects.html" target="_blank" rel="noopener">IntelliJ IDEA Spring Boot Help</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;使用IDEA创建项目&quot;&gt;&lt;a href=&quot;#使用IDEA创建项目&quot; class=&quot;headerlink&quot; title=&quot;使用IDEA创建项目&quot;&gt;&lt;/a&gt;使用IDEA创建项目&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;New Project，选择&lt;code&gt;Spring In
      
    
    </summary>
    
      <category term="后端" scheme="https://sunshineuun.github.io/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Spring 框架" scheme="https://sunshineuun.github.io/categories/%E5%90%8E%E7%AB%AF/Spring-%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Spring boot" scheme="https://sunshineuun.github.io/tags/Spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>TILT3D-Firefox</title>
    <link href="https://sunshineuun.github.io/2018/01/24/ILT3D-Firefox/"/>
    <id>https://sunshineuun.github.io/2018/01/24/ILT3D-Firefox/</id>
    <published>2018-01-24T04:18:00.000Z</published>
    <updated>2018-01-24T07:09:28.315Z</updated>
    
    <content type="html"><![CDATA[<h5 id="TILT-3D-效果如下"><a href="#TILT-3D-效果如下" class="headerlink" title="TILT 3D 效果如下"></a>TILT 3D 效果如下</h5><p><img src="/images/pasted-30.png" alt="upload successful"></p><h5 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h5><p>将网页已3D的模型展示出来。</p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ul><li>因为目前貌似有版本影响的问题，笔者用的版本为<code>49.0.2</code>。</li><li>菜单栏 &gt;&gt; 工具 &gt;&gt; Web开发者 &gt;&gt; 获取更多工具</li><li><p>查询Tilt组件，结果如下图；点击进去安装，重启FireFox即可。<br><img src="/images/pasted-31.png" alt="upload successful"></p></li><li><p>菜单栏 &gt;&gt; 工具 &gt;&gt; Web开发者下找到Tilt工具，笔者是用<code>Ctrl+Shift+M</code>调用的。具体视情况而定。<br><img src="/images/pasted-32.png" alt="upload successful"></p></li></ul><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><p><a href="https://addons.mozilla.org/en-US/firefox/addon/tilt/" target="_blank" rel="noopener">插件地址-US</a><br><a href="https://addons.mozilla.org/zh-CN/firefox/addon/tilt/" target="_blank" rel="noopener">插件地址-ZH</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;TILT-3D-效果如下&quot;&gt;&lt;a href=&quot;#TILT-3D-效果如下&quot; class=&quot;headerlink&quot; title=&quot;TILT 3D 效果如下&quot;&gt;&lt;/a&gt;TILT 3D 效果如下&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/images/pasted-30.pn
      
    
    </summary>
    
      <category term="前端" scheme="https://sunshineuun.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Tilt 3D" scheme="https://sunshineuun.github.io/tags/Tilt-3D/"/>
    
  </entry>
  
  <entry>
    <title>Angular-脚手架</title>
    <link href="https://sunshineuun.github.io/2018/01/23/ngular-%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
    <id>https://sunshineuun.github.io/2018/01/23/ngular-脚手架/</id>
    <published>2018-01-23T07:43:00.000Z</published>
    <updated>2018-01-24T07:09:42.159Z</updated>
    
    <content type="html"><![CDATA[<h5 id="脚手架命令"><a href="#脚手架命令" class="headerlink" title="脚手架命令"></a>脚手架命令</h5><table><thead><tr><th>范围</th><th style="text-align:center">命令</th><th style="text-align:right">作用</th></tr></thead><tbody><tr><td>new</td><td style="text-align:center">right-aligned</td><td style="text-align:right">初始化新项目</td></tr><tr><td>Component</td><td style="text-align:center">ng g component my-new-component</td><td style="text-align:right">新建一个组件</td></tr><tr><td>Directive</td><td style="text-align:center">ng g directive my-new-directive</td><td style="text-align:right">新建一个指令</td></tr><tr><td>Pipe</td><td style="text-align:center">ng g pipe my-new-pipe</td><td style="text-align:right">新建一个管道</td></tr><tr><td>Service</td><td style="text-align:center">ng g service my-new-service</td><td style="text-align:right">新建一个服务</td></tr><tr><td>Class</td><td style="text-align:center">ng g class my-new-class</td><td style="text-align:right">新建一个类</td></tr><tr><td>Interface</td><td style="text-align:center">ng g interface my-new-interface</td><td style="text-align:right">新建一个接口</td></tr><tr><td>Enum</td><td style="text-align:center">ng g enum my-new-enum</td><td style="text-align:right">新建一个枚举</td></tr><tr><td>Module</td><td style="text-align:center">ng g module my-module</td><td style="text-align:right">新建一个模块</td></tr></tbody></table><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><ul><li>启动服务<code>ng serve</code></li><li>打包<code>ng build</code></li></ul><h5 id="目录树详解"><a href="#目录树详解" class="headerlink" title="目录树详解"></a>目录树详解</h5><p><img src="/images/pasted-29.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;脚手架命令&quot;&gt;&lt;a href=&quot;#脚手架命令&quot; class=&quot;headerlink&quot; title=&quot;脚手架命令&quot;&gt;&lt;/a&gt;脚手架命令&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th style=&quot;text-align:center
      
    
    </summary>
    
      <category term="前端" scheme="https://sunshineuun.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Angular" scheme="https://sunshineuun.github.io/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>Angular-双向数据绑定</title>
    <link href="https://sunshineuun.github.io/2018/01/23/ngular-%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A/"/>
    <id>https://sunshineuun.github.io/2018/01/23/ngular-双向数据绑定/</id>
    <published>2018-01-23T03:19:00.000Z</published>
    <updated>2018-01-24T07:09:50.670Z</updated>
    
    <content type="html"><![CDATA[<h4 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h4><h6 id="主要代码如下"><a href="#主要代码如下" class="headerlink" title="主要代码如下"></a>主要代码如下</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># [(ngModel)]=&quot;password&quot;，使用[(ngModel)]进行绑定password属性</span><br><span class="line">&lt;input type=&quot;password&quot; [(ngModel)]=&quot;password&quot; value=&quot;&#123;&#123;password&#125;&#125;&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>[(ngModel)]</code>是一个Angular语法，用与把<code>password</code>绑定到输入框中。 它的数据流是双向的：从属性到输入框，并且从输入框回到属性。<br>不幸的是，做了这项改动之后，我们的程序崩溃了。 打开浏览器的控制台，我们会看到Angular抱怨说：“ngModel … isn’t a known property of input.”（ngModel不是input元素的已知属性）<br>虽然<code>NgModel</code>是一个有效的Angular指令，但它默认情况下却是不可用的。 它属于一个可选模块<code>FormsModule</code>。 我们必须选择使用那个模块。</p><h6 id="导入FormMoule模块"><a href="#导入FormMoule模块" class="headerlink" title="导入FormMoule模块"></a>导入<code>FormMoule</code>模块</h6><p>打开<code>app.module.ts</code>文件，并且从<code>@angular/forms</code>库中导入符号<code>FormsModule</code>。 然后把<code>FormsModule</code>添加到<code>@NgModule</code>元数据的<code>imports</code>数组中，它是当前应用正在使用的外部模块列表。<br>修改后的<code>AppModule</code>是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import &#123;BrowserModule&#125; from &apos;@angular/platform-browser&apos;;</span><br><span class="line">import &#123;NgModule&#125; from &apos;@angular/core&apos;;</span><br><span class="line">import &#123;FormsModule&#125; from &apos;@angular/forms&apos;;</span><br><span class="line"></span><br><span class="line">import &#123;AppComponent&#125; from &apos;./app.component&apos;;</span><br><span class="line">import &#123;UserComponent&#125; from &apos;./user/user.component&apos;;</span><br><span class="line"></span><br><span class="line">@NgModule(&#123;</span><br><span class="line">  declarations: [</span><br><span class="line">    AppComponent,</span><br><span class="line">    UserComponent</span><br><span class="line">  ],</span><br><span class="line">  imports: [</span><br><span class="line">    BrowserModule,</span><br><span class="line">    FormsModule</span><br><span class="line">  ],</span><br><span class="line">  providers: [],</span><br><span class="line">  bootstrap: [AppComponent]</span><br><span class="line">&#125;)</span><br><span class="line">export class AppModule &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h6 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h6><ul><li><a href="https://angular.cn/api/forms/FormsModule" target="_blank" rel="noopener">FormsModule</a></li><li><a href="https://angular.cn/api/forms/NgControlStatus" target="_blank" rel="noopener">ngModel</a></li><li><a href="https://angular.cn/guide/template-syntax#ngModel" target="_blank" rel="noopener">模板语法</a></li><li><a href="https://angular.cn/guide/forms#ngModel" target="_blank" rel="noopener">表单</a></li><li><a href="https://angular.cn/tutorial" target="_blank" rel="noopener">Angular官网</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;双向数据绑定&quot;&gt;&lt;a href=&quot;#双向数据绑定&quot; class=&quot;headerlink&quot; title=&quot;双向数据绑定&quot;&gt;&lt;/a&gt;双向数据绑定&lt;/h4&gt;&lt;h6 id=&quot;主要代码如下&quot;&gt;&lt;a href=&quot;#主要代码如下&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="前端" scheme="https://sunshineuun.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Angular" scheme="https://sunshineuun.github.io/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>Angular CLI 安装和使用</title>
    <link href="https://sunshineuun.github.io/2018/01/19/Angular-CLI-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://sunshineuun.github.io/2018/01/19/Angular-CLI-安装和使用/</id>
    <published>2018-01-19T13:20:00.000Z</published>
    <updated>2018-01-19T13:51:03.626Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h5><ol><li>关于Angular版本，Angular官方已经统一命名<code>Angular 1.x</code>统称为<code>Angular JS</code>；<code>Angular 2.x</code>及以上统称<code>Angular</code>；</li><li><code>CLI</code>是<code>Command Line Interface</code>的简写，是一种命令行接口，实现自动化开发流程，比如：ionic cli、vue cli等；它可以创建项目、添加文件以及执行一大堆开发任务，比如测试、打包和发布。</li></ol><h5 id="安装Angular-CLI"><a href="#安装Angular-CLI" class="headerlink" title="安装Angular CLI"></a>安装Angular CLI</h5><ul><li><p>确认是否安装node和npm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v # 6.9.4</span><br><span class="line">npm -v # 3.10.10</span><br><span class="line">// node 版本高于6.9.3  npm版本高于3.0.0</span><br></pre></td></tr></table></figure></li><li><p>设置淘宝镜像，安装node-sass</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">设置环境变量</span><br><span class="line">set SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/</span><br><span class="line">npm install node-sass</span><br></pre></td></tr></table></figure></li><li><p>安装Angular CLI</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @angular/cli</span><br></pre></td></tr></table></figure></li><li><p>验证，执行<code>ng v</code>命令。出现下图情况则为安装成功。</p></li></ul><p><img src="/images/pasted-24.png" alt="upload successful"></p><h5 id="基于IDEA创建第一个AngularJS想用"><a href="#基于IDEA创建第一个AngularJS想用" class="headerlink" title="基于IDEA创建第一个AngularJS想用"></a>基于IDEA创建第一个AngularJS想用</h5><ul><li><p>创建项目,Anaular CLI选项，就是刚刚安装的。<br><img src="/images/pasted-25.png" alt="upload successful"><br><img src="/images/pasted-26.png" alt="upload successful"></p></li><li><p>创建的过程会下载创建一些资源如下图：<br><img src="/images/pasted-27.png" alt="upload successful"></p></li><li><p>使用<code>ng server</code>启动服务，访问端口<code>localhost:4200</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;背景介绍&quot;&gt;&lt;a href=&quot;#背景介绍&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;关于Angular版本，Angular官方已经统一命名&lt;code&gt;Angular 1.x&lt;/code&gt;统称为&lt;c
      
    
    </summary>
    
    
      <category term="Angular CLI" scheme="https://sunshineuun.github.io/tags/Angular-CLI/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis二级缓存应用第三方（Redis）</title>
    <link href="https://sunshineuun.github.io/2018/01/19/Batis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E5%BA%94%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88Redis%EF%BC%89/"/>
    <id>https://sunshineuun.github.io/2018/01/19/Batis二级缓存应用第三方（Redis）/</id>
    <published>2018-01-19T05:48:00.000Z</published>
    <updated>2018-01-19T13:20:02.424Z</updated>
    
    <content type="html"><![CDATA[<h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>使用mybatis时可以使用二级缓存提高查询速度，进而改善用户体验。 使用redis做mybatis的二级缓存可内存可控&lt;如将单独的服务器部署出来用于二级缓存&gt;，管理方便。</p><h5 id="使用思路"><a href="#使用思路" class="headerlink" title="使用思路"></a>使用思路</h5><ul><li>配置redis-applicationContext.xml 设置redis服务连接各参数</li><li>在配置文件中使用标签，设置开启二级</li><li>在需要使用二级h缓存的mapper.xml中使用将cache映射到指定的MybatisRedis类中</li><li>映射类MybatisRedisCache实现MyBatis包中的Cache类，并重写其中各方法； 在重写各方法体中，使用redisFactory和redis服务建立连接，将缓存的数据加载到指定的redis内存中(putObject方法)或将redis 服务中的数据从缓存中读取出来(getObject方法)； 在redis服务中写入和加载数据时需要借用spring-data-redis.jar中JdkSerializationRedisSerializer.class中的序列化(serialize) 和反序列化方法(deserialize),此为包中封装的redis默认的序列化方法；</li><li>映射类中的各方法重写完成后即可实现mybatis数据二级缓存到redis服务中</li></ul><h5 id="代码实践"><a href="#代码实践" class="headerlink" title="代码实践"></a>代码实践</h5><ul><li><p>配置redis-applicationContext.xml<br><img src="/images/pasted-21.png" alt="upload successful"></p></li><li><p>mybatis-config.xml配置开启二级缓存<br><img src="/images/pasted-22.png" alt="upload successful"></p></li><li><p>在mapper.xml中映射缓存类MybatisRedisCache<br><img src="/images/pasted-23.png" alt="upload successful"></p></li><li><p>实现<a href="/files/MybatisRedisCache.java">MybatisRedisCache</a>接口</p></li><li><p>使用中间类<a href="/files/RedisCacheTransfer.java">RedisCacheTransfer</a>解决MybatisRedisCache.jedisConnectionFactory的静态注入。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h5&gt;&lt;p&gt;使用mybatis时可以使用二级缓存提高查询速度，进而改善用户体验。 使用redis做mybatis的二级缓存可内存可控&amp;lt;如将单独的服
      
    
    </summary>
    
    
      <category term="Mybatis" scheme="https://sunshineuun.github.io/tags/Mybatis/"/>
    
      <category term="Redis" scheme="https://sunshineuun.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Next主题之live2d，看板娘，博客宠物</title>
    <link href="https://sunshineuun.github.io/2018/01/19/xt%E4%B8%BB%E9%A2%98%E4%B9%8Blive2d%EF%BC%8C%E7%9C%8B%E6%9D%BF%E5%A8%98%EF%BC%8C%E5%8D%9A%E5%AE%A2%E5%AE%A0%E7%89%A9/"/>
    <id>https://sunshineuun.github.io/2018/01/19/xt主题之live2d，看板娘，博客宠物/</id>
    <published>2018-01-19T05:02:50.000Z</published>
    <updated>2018-01-19T05:17:49.959Z</updated>
    
    <content type="html"><![CDATA[<h5 id="为博客加入看板娘，宠物"><a href="#为博客加入看板娘，宠物" class="headerlink" title="为博客加入看板娘，宠物"></a>为博客加入看板娘，宠物</h5><p>效果图如下：<br><img src="/images/pasted-18.png" alt="upload successful"></p><h5 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><ul><li>live2d插件安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li></ul><p>注意：需要在项目的根目录下执行哦</p><ul><li><p>然后打开<code>Hexo/blog/themes/next/layout</code><br>的<code>_layout.swig</code>,将下面代码放到<code>&lt;/body&gt;</code>之前：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; live2d() &#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后在在 <code>hexo</code> 的 <code>_config.yml</code> 中添加参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  model: wanko</span><br><span class="line">  bottom: -30</span><br></pre></td></tr></table></figure></li><li><p>如果想让宠物在移动端不显示的话再<code>主题配置文件</code>中加入以下代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  model: wanko</span><br><span class="line">  bottom: -30</span><br><span class="line">  mobileShow: false</span><br></pre></td></tr></table></figure></li></ul><p>这样就配置成功了！</p><h5 id="live2d的详细配置解释"><a href="#live2d的详细配置解释" class="headerlink" title="live2d的详细配置解释"></a>live2d的详细配置解释</h5><ul><li>live2d的项目地址在<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">这里</a></li><li><strong>Settings</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line">live2d:</span><br><span class="line">  model: z16 # 展示模型的代码. 默认: z16</span><br><span class="line">  width: 150 # 这个模型的宽度. 默认: 150</span><br><span class="line">  height: 300 # 这个模型的高度. default: 300</span><br><span class="line">  scaling: 1 # 分辨率缩放. default: 2</span><br><span class="line">  opacityDefault: 0.7 # 透明度. default: 0.7</span><br><span class="line">  opacityHover: 1 # The opacity when hover. default: 1</span><br><span class="line">  mobileShow: true #是否在移动设备上显示. default: true</span><br><span class="line">  mobileScaling: 0.5 # The scaling on mobile. default: 0.5</span><br><span class="line">  position: right # 模型所在网页的左边还是右边. default: right</span><br><span class="line">  horizontalOffset: 0 # 横向偏移量. default: 0</span><br><span class="line">  verticalOffset: -20 # 纵向偏移量. default: -20</span><br><span class="line">  id: live2dcanvas # live2d元素的ID. default: live2dcanvas</span><br><span class="line">  deviceJsSource: local # 当前设备脚本的源代码. default: local</span><br></pre></td></tr></table></figure></li></ul><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ol><li><a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">live2d模型预览</a></li><li><a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">live2d项目地址</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;为博客加入看板娘，宠物&quot;&gt;&lt;a href=&quot;#为博客加入看板娘，宠物&quot; class=&quot;headerlink&quot; title=&quot;为博客加入看板娘，宠物&quot;&gt;&lt;/a&gt;为博客加入看板娘，宠物&lt;/h5&gt;&lt;p&gt;效果图如下：&lt;br&gt;&lt;img src=&quot;/images/pasted
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="https://sunshineuun.github.io/2018/01/19/rkdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://sunshineuun.github.io/2018/01/19/rkdown基本语法/</id>
    <published>2018-01-19T04:13:00.000Z</published>
    <updated>2018-01-23T07:43:01.698Z</updated>
    
    <content type="html"><![CDATA[<h5 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h5><p>只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 # 即可，标题字号相应降低。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>注：# 和「一级标题」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。</p><h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 -/* 就可以了，例如：</p><ul><li>无序列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 文本1</span><br><span class="line">- 文本2</span><br><span class="line">- 文本3</span><br></pre></td></tr></table></figure><ul><li>有序列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 文本1</span><br><span class="line">2. 文本2</span><br><span class="line">3. 文本3</span><br></pre></td></tr></table></figure><h5 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h5><p>使用 <code>[显示文本](链接地址)</code> 这样的语法即可，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度传送门](www.baidu.com)</span><br></pre></td></tr></table></figure></p><p>图片插入<code>![](图片链接地址)</code>，图片链接地址可以是相对路径，绝对路径，也可以是网上的资源。</p><h5 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h5><p>引用他人的文字，这个时候引用这个格式就很有必要了，在 Markdown 中，你只需要在你希望引用的文字前面加上 &gt; 就好了，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用演示</span><br></pre></td></tr></table></figure></p><h5 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h5><p>Markdown 的粗体和斜体也非常简单，用两个 <code>*</code> 包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。例如：<br>演示语句：<em>我是斜体</em>，<strong>我是粗体</strong><br>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*我是斜体*，**我是粗体**</span><br></pre></td></tr></table></figure></p><h5 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h5><p>字段的代码用<code>进行包裹，段落的代码用</code>进行包裹。</p><h5 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 3 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| zebra stripes | are neat      |    $1 |</span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h5&gt;&lt;p&gt;只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 # 即可，标题字号
      
    
    </summary>
    
      <category term="语法" scheme="https://sunshineuun.github.io/categories/%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://sunshineuun.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>GitLab之IP修改</title>
    <link href="https://sunshineuun.github.io/2018/01/19/GitLab%E4%B9%8BIP%E4%BF%AE%E6%94%B9/"/>
    <id>https://sunshineuun.github.io/2018/01/19/GitLab之IP修改/</id>
    <published>2018-01-19T02:35:00.000Z</published>
    <updated>2018-01-19T05:01:05.927Z</updated>
    
    <content type="html"><![CDATA[<h5 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h5><p>虚拟机的IP地址变动了，用新的IP地址直接访问虚拟的gitlab没问题，开发者的项目上修改对应的远程地址也就可以关联上了。但是出现一个问题，如下图所示：<br>项目的下载地址还是原有的IP地址，不是现有IP地址。基于这样的问题给出以下修改。<br><img src="/images/pasted-14.png" alt="upload successful"></p><h5 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h5><p>PS:笔者用的是ubuntu的系统</p><ul><li><p>进入gitlab的配置目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/gitlab/embedded/service/gitlab-rails/config</span><br></pre></td></tr></table></figure></li><li><p>用<code>ls</code>命令查看目录下的文件，如下图：。目录中会包含一个<code>gitlab.yml</code>的文件。<br>  <img src="/images/pasted-15.png" alt="upload successful"></p></li><li><p>打开并修改相关配置，用<code>vi gitlab.yml</code>命令进行打开。将图中host修改成新指定的IP即可。例如我这里就将IP修改为<code>192.168.16.182</code><br>  <img src="/images/pasted-16.png" alt="upload successful"></p></li><li><p><code>gitlab-ctl restart</code>重启服务即可，效果图如下：<br>  <img src="/images/pasted-17.png" alt="upload successful"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h5&gt;&lt;p&gt;虚拟机的IP地址变动了，用新的IP地址直接访问虚拟的gitlab没问题，开发者的项目上修改对应的远程地址也就可以关联上了。但
      
    
    </summary>
    
      <category term="IT" scheme="https://sunshineuun.github.io/categories/IT/"/>
    
      <category term="版本控制" scheme="https://sunshineuun.github.io/categories/IT/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="GitLab" scheme="https://sunshineuun.github.io/tags/GitLab/"/>
    
      <category term="IP" scheme="https://sunshineuun.github.io/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题之NexT</title>
    <link href="https://sunshineuun.github.io/2018/01/18/xo%E6%9B%BF%E6%8D%A2%E4%B8%BB%E9%A2%98%E4%B8%BANexT/"/>
    <id>https://sunshineuun.github.io/2018/01/18/xo替换主题为NexT/</id>
    <published>2018-01-18T03:34:00.000Z</published>
    <updated>2018-01-18T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ul><li><p>下载NexT主题，下载地址请前往<font size="4"><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">这里</a></font>。如下图！或者点击<font size="4"><a href="https://github.com/iissnan/hexo-theme-next/archive/master.zip" target="_blank" rel="noopener">这里</a></font>直接进行下载。</p><p>  <img src="/images/pasted-2.png" alt="upload successful"></p></li><li><p>将下载下来的文件解压，放到根目录下的themes文件夹下。如下图中的next下存储的就是NexT主题。</p><p>  <img src="/images/pasted-4.png" alt="upload successful"></p></li></ul><h5 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h5><p>修改<font size="4">./_config.yml</font>中的theme配置<br><code>theme: next</code></p><h5 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h5><ul><li>前往<a href="https://github.com" target="_blank" rel="noopener">Github</a>创建OAuth App。<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">传送门直接新建</a>，前提需要已经登录了。</li><li><p>打开如下图：</p><p>  <img src="/images/pasted-8.png" alt="upload successful"></p></li><li>Authorization callback URL这一项填写需要谨慎，一般是自己的域名，回调用的，其他随意填写。</li><li><p>会生成如下内容：Client ID和Client Secret</p><p>  <img src="/images/pasted-9.png" alt="upload successful"></p></li><li><p>编辑主题配置文件(_config.yml)，启用评论功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gitment:</span><br><span class="line">  enable: true</span><br><span class="line">  lazy: true #用一个按钮延迟加载评论。</span><br><span class="line">  github_user: #Github ID</span><br><span class="line">  github_repo: #评论存储仓库</span><br><span class="line">  client_id: #在上一步获取的到的</span><br><span class="line">  client_secret: #在上一步获取的到的</span><br></pre></td></tr></table></figure></li><li><p>效果如下：</p><p>  <img src="/images/pasted-10.png" alt="upload successful"></p></li></ul><h5 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h5><p>一下代码都是被注释掉，去掉注释，并且配置对应的图片的路径，图片是支付宝，微信的<font size="5">收款码</font>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: I&apos;m not rich, but still hold the dream.</span><br><span class="line">wechatpay: /images/wechatpay.jpg</span><br><span class="line">alipay: /images/alipay.jpg</span><br></pre></td></tr></table></figure></p><h5 id="添加查询功能"><a href="#添加查询功能" class="headerlink" title="添加查询功能"></a>添加查询功能</h5><h6 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h6><ul><li><p>安装<code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>编辑站点配置文件(_config.yml)，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑主题配置文件(_config.yml)，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ul><h5 id="添加字数统计"><a href="#添加字数统计" class="headerlink" title="添加字数统计"></a>添加字数统计</h5><p>效果如图：</p><p><img src="/images/pasted-11.png" alt="upload successful"></p><ul><li><p>安装插件，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></li><li><p>在主题配置文件(_config.yml)中找到<code>post_wordcount</code>对相关参数做以下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br></pre></td></tr></table></figure></li></ul><h5 id="添加文章访问量统计之LeanCloud"><a href="#添加文章访问量统计之LeanCloud" class="headerlink" title="添加文章访问量统计之LeanCloud"></a>添加文章访问量统计之LeanCloud</h5><ul><li>前往注册，<a href="https://leancloud.cn/" target="_blank" rel="noopener">传送门</a></li><li>创建一个应用</li><li>进入应用，在左侧导航栏<code>存储</code>中创建一个Class，注意Class的名字必须是<font size="4">Counter</font>，如下图。</li></ul><p><img src="/images/pasted-12.png" alt="upload successful"></p><ul><li>在左侧导航栏<code>设置</code>中<code>应用Key</code>能找到App ID和App Key这两个是要填入Hexo的配置中。</li></ul><p><img src="/images/pasted-13.png" alt="upload successful"></p><ul><li><p>修改Hexo主题配置文件，在文件中找到类似以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https://leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: 对应App ID</span><br><span class="line">  app_key: 对应App Key</span><br></pre></td></tr></table></figure></li><li><p>至此配置成功</p></li></ul><h5 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h5><ol><li><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码错误！&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>插入位置参考下图：<br><img src="/images/pasted-19.png" alt="upload successful"></p></li><li><p>然后向指定文章插入<code>password: password</code><br><img src="/images/pasted-20.png" alt="upload successful"></p></li></ol><h5 id="博文静态资源压缩"><a href="#博文静态资源压缩" class="headerlink" title="博文静态资源压缩"></a>博文静态资源压缩</h5><ul><li><p>插件安装，执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure></li><li><p>在项目的根目录中创建<code>gulpfile.js</code>文件，将<font size="4" color="red"><a href="/files/gulpfile.js">这里</a></font>的代码拷贝到创建的<code>gulpfile.js</code>文件中。</p></li><li>生成博文是执行 <code>hexo g &amp;&amp; gulp</code></li></ul><h5 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h5><h6 id="Next主题标签，分类，关于界面打开出现404的情况。"><a href="#Next主题标签，分类，关于界面打开出现404的情况。" class="headerlink" title="Next主题标签，分类，关于界面打开出现404的情况。"></a>Next主题标签，分类，关于界面打开出现404的情况。</h6><p>1.1创建标签导航</p><ul><li>在Hexo项目的根目录下打开CMD命令执行以下命令<br><code>hexo new page &quot;tags&quot;</code></li><li>执行结束后，会在./source文件夹下出现一个<font size="4">tags</font>文件夹里面默认有一个index.md的文件，这就是我们创建的导航栏的分类页面</li><li>对index.md进行修改代码如下，重复部分忽略：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2018-01-18 11:20:02</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ul><p>1.2创建分类导航</p><ul><li>在Hexo项目的根目录下打开CMD命令执行以下命令<br><code>hexo new page &quot;categories&quot;</code></li><li>执行结束后，会在./source文件夹下出现一个<font size="4">categories</font>文件夹里面默认有一个index.md的文件，这就是我们创建的导航栏的分类页面</li><li>对index.md进行修改代码如下，重复部分忽略：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2018-01-18 11:20:02</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ul><p>1.3创建关于导航</p><ul><li>在Hexo项目的根目录下打开CMD命令执行以下命令<br><code>hexo new page &quot;about&quot;</code></li><li>执行结束后，会在./source文件夹下出现一个<font size="4">about</font>文件夹里面默认有一个index.md的文件，这就是我们创建的导航栏的分类页面</li><li>对index.md进行修改代码如下，重复部分忽略：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 关于</span><br><span class="line">date: 2018-01-18 11:20:02</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ul><hr><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT官方</a></li><li><a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">NexT第三方服务集成</a></li><li><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">个性化配置参考</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载NexT主题，下载地址请前往&lt;font size=&quot;4&quot;&gt;&lt;a href=&quot;https://github.com/ii
      
    
    </summary>
    
      <category term="Blog" scheme="https://sunshineuun.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://sunshineuun.github.io/tags/NexT/"/>
    
      <category term="NexT优化" scheme="https://sunshineuun.github.io/tags/NexT%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo搭建个人博客</title>
    <link href="https://sunshineuun.github.io/2018/01/17/GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://sunshineuun.github.io/2018/01/17/GitHub-Hexo搭建个人博客/</id>
    <published>2018-01-17T06:22:00.000Z</published>
    <updated>2018-01-18T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h5 id="1-拥有一个GitHub账号"><a href="#1-拥有一个GitHub账号" class="headerlink" title="1.拥有一个GitHub账号"></a>1.拥有一个GitHub账号</h5><p><a href="https://github.com" target="_blank" rel="noopener">前往</a>以下地址进行申请</p><hr><h5 id="2-创建博客仓库"><a href="#2-创建博客仓库" class="headerlink" title="2.创建博客仓库"></a>2.创建博客仓库</h5><h6 id="2-1-New-respository"><a href="#2-1-New-respository" class="headerlink" title="2.1 New respository"></a>2.1 New respository</h6><p><img src="/images/pasted-0.png" alt="pasted-0.png"></p><h6 id="2-2-填写信息"><a href="#2-2-填写信息" class="headerlink" title="2.2 填写信息"></a>2.2 填写信息</h6><ul><li>标注【1】处填写github_username.github.io。</li><li>github_username用自己的用户名称代替。</li><li>点击【Create repository】创建仓库。至此github的仓库创建好了。<br><img src="/images/pasted-1.png" alt="pasted-1.png"></li></ul><hr><h5 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h5><h6 id="3-1安装Node-js"><a href="#3-1安装Node-js" class="headerlink" title="3.1安装Node.js"></a>3.1安装Node.js</h6><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js官方下载地址</a>，并且配置环境变量。</li><li><a href="https://baidu.com" target="_blank" rel="noopener">Windows环境变量配置</a>,目前没有编写博客，后续补充。</li><li><a href="https://baidu.com" target="_blank" rel="noopener">Liunx环境变量配置</a>,目前没有编写博客，后续补充。<h6 id="3-2设置npm淘宝镜像站点"><a href="#3-2设置npm淘宝镜像站点" class="headerlink" title="3.2设置npm淘宝镜像站点"></a>3.2设置npm淘宝镜像站点</h6></li><li>npm默认源的下载速度可能很慢，建议使用淘宝镜像替换。</li><li>执行下面命令，将npm的源设置成淘宝镜像站点<br><code>npm config set registry &quot;https://registry.npm.taobao.org&quot;</code></li><li>配置Node.js的环境变量</li></ul><h6 id="3-2安装Hexo"><a href="#3-2安装Hexo" class="headerlink" title="3.2安装Hexo"></a>3.2安装Hexo</h6><ul><li>执行一下命令安装Hexo，Hexo是安装在shell打开的当前路径下的<br><code>npm install hexo-cli g</code></li><li>初始化博客，初始化的博客是在shell打开的当前路径下创建目录<br><code>hexo init blog</code></li><li>进入blog的主目录中<br><code>cd blog</code></li><li>安装Hexo扩展插件<br><code>npm install</code></li><li>安装其它插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br><span class="line"># 可视化博客编辑插件</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line"># git发布插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li></ul><p>至此安装完毕！！！</p><hr><h5 id="4-Hexo基本使用"><a href="#4-Hexo基本使用" class="headerlink" title="4.Hexo基本使用"></a>4.Hexo基本使用</h5><h6 id="4-1启用Hexo服务"><a href="#4-1启用Hexo服务" class="headerlink" title="4.1启用Hexo服务"></a>4.1启用Hexo服务</h6><ul><li>静态页面生成<br><code>hexo generate</code></li><li>启动本地服务<br><code>hexo server</code></li><li>打开浏览器，地址栏中输入：[<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ],应该可以看见刚刚创建的博客了</li></ul><h6 id="4-2问题答疑"><a href="#4-2问题答疑" class="headerlink" title="4.2问题答疑"></a>4.2问题答疑</h6><ul><li>如果出现无法访问的情况，可能是4000这个端口被占用了。解决方式，关闭服务，修改端口，再次启动服务器。相关代码如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改端口</span><br><span class="line">hexo s -p 5000</span><br><span class="line"># 关闭服务</span><br><span class="line">Ctrl+C</span><br></pre></td></tr></table></figure></li></ul><hr><h5 id="5-将Hexo博客部署到GitHub上"><a href="#5-将Hexo博客部署到GitHub上" class="headerlink" title="5.将Hexo博客部署到GitHub上"></a>5.将Hexo博客部署到GitHub上</h5><h6 id="5-1配置"><a href="#5-1配置" class="headerlink" title="5.1配置"></a>5.1配置</h6><ul><li><p>修改配置文件blog/_config.yml，修改deploy项的内容，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库的地址</span><br><span class="line">  repo: https://github.com/Sunshineuun/Sunshineuun.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>注意：yml的语法要求各个标签【:】分号必须有空格。</p></li><li>注意：repo是对应仓库的地址，在<code>hexo deploy</code>的时候会提示输入密码。</li></ul><h6 id="5-2部署"><a href="#5-2部署" class="headerlink" title="5.2部署"></a>5.2部署</h6><ul><li><p>执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清空静态页面</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 部署 </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>打开网页，输入<a href="http://github_username.github.io" target="_blank" rel="noopener">http://github_username.github.io</a> ，打开github上托管的博客。如我的博客地址是：<a href="http://Sunshineuun.github.io。" target="_blank" rel="noopener">http://Sunshineuun.github.io。</a></p></li></ul><hr><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT官网</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h5 id=&quot;1-拥有一个GitHub账号&quot;&gt;&lt;a href=&quot;#1-拥有一个GitHub账号&quot; class=&quot;headerlink&quot; title=&quot;1.拥有一个GitHub账号&quot;&gt;&lt;/a&gt;1.拥有一个GitHub账号&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://
      
    
    </summary>
    
      <category term="Blog" scheme="https://sunshineuun.github.io/categories/Blog/"/>
    
    
      <category term="GitHub" scheme="https://sunshineuun.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
