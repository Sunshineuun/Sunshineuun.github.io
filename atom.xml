<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Minnie技术博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sunshineuun.github.io/"/>
  <updated>2018-03-18T08:21:03.860Z</updated>
  <id>https://sunshineuun.github.io/</id>
  
  <author>
    <name>邱胜明</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB</title>
    <link href="https://sunshineuun.github.io/2018/03/18/ongoDB/"/>
    <id>https://sunshineuun.github.io/2018/03/18/ongoDB/</id>
    <published>2018-03-18T07:44:00.000Z</published>
    <updated>2018-03-18T08:21:03.860Z</updated>
    
    <content type="html"><![CDATA[<h4 id="更新命令"><a href="#更新命令" class="headerlink" title="更新命令"></a>更新命令</h4><h5 id="update"><a href="#update" class="headerlink" title="update"></a>update</h5><p>格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.update(criteria,objNew,upsert,multi)</span><br></pre></td></tr></table></figure></p><p>参数说明如下：<br><strong>criteria</strong>：查询条件<br><strong>objNew</strong>：update对象和一些更新操作符<br><strong>upsert</strong>：如果不存在update的记录，是否插入objNew这个新的文档，true为插入，默认为false，不插入。<br><strong>multi</strong>：默认是false，只更新找到的第一条记录。如果为true，把按条件查询出来的记录全部更新。</p><h5 id="save"><a href="#save" class="headerlink" title="save"></a>save</h5><p>格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.save(obj)</span><br></pre></td></tr></table></figure></p><p>参数说明如下：<br>obj：代表需要更新的对象，如果集合内部已经存在一个和obj相同的<strong>_id</strong>的记录，Mongodb会把obj对象替换集合内已存在的记录，如果不存在，则会插入obj对象。</p><h5 id="更新操作符号"><a href="#更新操作符号" class="headerlink" title="更新操作符号"></a>更新操作符号</h5><h6 id="inc"><a href="#inc" class="headerlink" title="$inc"></a>$inc</h6><p>用法：{$inc:{field:value}}<br>作用：对一个数字字段的某个field增加value<br>说明：只能运用在数值类型上</p><h6 id="set"><a href="#set" class="headerlink" title="$set"></a>$set</h6><p>用法：{$set:{field:value}}<br>作用：把文档中某个字段field的值设为value</p><h6 id="unset"><a href="#unset" class="headerlink" title="$unset"></a>$unset</h6><p>用法：{$unset:{field:1}}<br>作用：删除某个字段field</p><h6 id="push"><a href="#push" class="headerlink" title="$push"></a>$push</h6><p>用法：{$push:{field:value}}<br>作用：把value追加到field里。<br>说明：field只能是数组类型，如果field不存在，会自动插入一个数组类型</p><h6 id="pushAll"><a href="#pushAll" class="headerlink" title="pushAll"></a>pushAll</h6><p>用法：{$pushAll:{field:value_array}}<br>作用：用法同$push一样，只是$pushAll可以一次追加多个值到一个数组字段内。<br>说明：field只能是数组类型。</p><h6 id="addToSet"><a href="#addToSet" class="headerlink" title="$addToSet"></a>$addToSet</h6><p>用法：{$addToSet:{field:value}}<br>作用：加一个值到数组内，而且只有当这个值在数组中不存在时才增加。<br>说明：结果是append，不是add，就算存入的是数组，它也是单个值<br>举例：存入[ “A3”, “A4” ]的效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ &quot;Michael&quot;, &quot;A1&quot;, &quot;A2&quot;, [ &quot;A3&quot;, &quot;A4&quot; ] ]</span><br></pre></td></tr></table></figure></p><h6 id="pop"><a href="#pop" class="headerlink" title="$pop"></a>$pop</h6><p>用法：删除数组内第一个值：{$pop:{field:-1}}、删除数组内最后一个值：{$pop:{field:1}}<br>作用：用于删除数组内的一个值</p><h6 id="pull"><a href="#pull" class="headerlink" title="$pull"></a>$pull</h6><p>用法：{$pull:{field:_value}}<br>作用：从数组field内删除一个等于_value的值</p><h6 id="pullAll"><a href="#pullAll" class="headerlink" title="$pullAll"></a>$pullAll</h6><p>用法：{$pullAll:value_array}<br>作用：用法同$pull一样，可以一次性删除数组内的多个值。</p><h6 id="rename"><a href="#rename" class="headerlink" title="$rename"></a>$rename</h6><p>用法：{$rename:{old_field_name:new_field_name}}<br>作用：对字段进行重命名</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><a href="https://www.yiibai.com/mongodb/mongodb_quick_guide.html" target="_blank" rel="noopener">快速入门</a></li><li><a href="https://www.cnblogs.com/yu-zhang/p/5210966.html" target="_blank" rel="noopener">博客-更新命令(save,update)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;更新命令&quot;&gt;&lt;a href=&quot;#更新命令&quot; class=&quot;headerlink&quot; title=&quot;更新命令&quot;&gt;&lt;/a&gt;更新命令&lt;/h4&gt;&lt;h5 id=&quot;update&quot;&gt;&lt;a href=&quot;#update&quot; class=&quot;headerlink&quot; title=&quot;updat
      
    
    </summary>
    
    
      <category term="MongoDB" scheme="https://sunshineuun.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>后端开发知识要点</title>
    <link href="https://sunshineuun.github.io/2018/03/18/%E7%AB%AF%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86%E8%A6%81%E7%82%B9/"/>
    <id>https://sunshineuun.github.io/2018/03/18/端开发知识要点/</id>
    <published>2018-03-18T07:32:00.000Z</published>
    <updated>2018-03-18T08:21:13.284Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h4><h5 id="基本功"><a href="#基本功" class="headerlink" title="基本功"></a>基本功</h5><h6 id="面向对象的特征"><a href="#面向对象的特征" class="headerlink" title="面向对象的特征"></a>面向对象的特征</h6><ol><li>抽象<br> 抽象使我们更接近于事物的本质。<strong>抽象的过程就是一个提炼存在于事物之间共同拥有的元素，而这些事务之间共同拥有的元素往往是这一事物区别于其他事物关键的东西，这些元素就构成了事物的本质.</strong></li><li>继承<br>  既是拓展的过程，也是归类的过程。</li><li>封装<br>  私有化的一个过程。</li><li>多态性<br>  多种表达形式。</li></ol><h6 id="final-finally-finalize-的区别"><a href="#final-finally-finalize-的区别" class="headerlink" title="final, finally, finalize 的区别"></a>final, finally, finalize 的区别</h6><ul><li>final，修饰变量，常量；修饰Class，不运行被继承；修饰方法，拒绝重载；总之就是只能这样了的意思。</li><li>finally，抛出异常继续执行的代码块。</li><li>finalize，是一个清理方法。</li></ul><h6 id="int-和-Integer-有什么区别"><a href="#int-和-Integer-有什么区别" class="headerlink" title="int 和 Integer 有什么区别"></a>int 和 Integer 有什么区别</h6><p>int是基础类型，Integer是int的包装类；Integer是一个对象。</p><h6 id="重载和重写的区别"><a href="#重载和重写的区别" class="headerlink" title="重载和重写的区别"></a>重载和重写的区别</h6><ul><li>重载同一方法名称，但是不同参数，已达到多态的效果。</li><li>重写，也称覆盖，覆盖父类的方法。</li></ul><h6 id="抽象类和接口有什么区别"><a href="#抽象类和接口有什么区别" class="headerlink" title="抽象类和接口有什么区别"></a>抽象类和接口有什么区别</h6><ul><li>个人理解：抽象类有具体方法实现；接口中的方法，都是由继承类实现。</li><li>接口是对动作的抽象，而抽象类是对根源的抽象。</li></ul><hr><ol><li>接口和抽象类都是继承树的上层，他们的共同点如下：<br> 1.1    都是上层的抽象层。<br>1.2 都不能被实例化<br>1.3 都能包含抽象的方法，这些抽象的方法用于描述类具备的功能，但是不比提供具体的实现。</li><li>它们的区别如下：<br> 2.1 在抽象类中可以写非抽象的方法，从而避免在子类中重复书写它们，这样可以提高代码的复用性，这是抽象类的优势；接口中只能有抽象的方法。<br>2.2 一个类只能继承一个直接父类，这个父类可以是具体的类也可是抽象类；但是一个类可以实现多个接口。</li></ol><p>参考：<a href="https://www.zhihu.com/question/20149818" target="_blank" rel="noopener">知乎-接口和抽象类有什么区别？</a></p><h6 id="说说反射的用途及实现"><a href="#说说反射的用途及实现" class="headerlink" title="说说反射的用途及实现"></a>说说反射的用途及实现</h6><p>用途：获取当前对象几乎所有的信息，属性，方法，注解等。<br>参考：<a href="http://www.sczyh30.com/posts/Java/java-reflection-1/" target="_blank" rel="noopener">反射理解基础</a></p><h6 id="说说自定义注解的场景及实现"><a href="#说说自定义注解的场景及实现" class="headerlink" title="说说自定义注解的场景及实现"></a>说说自定义注解的场景及实现</h6><h6 id="HTTP-请求的-GET-与-POST-方式的区别"><a href="#HTTP-请求的-GET-与-POST-方式的区别" class="headerlink" title="HTTP 请求的 GET 与 POST 方式的区别"></a>HTTP 请求的 GET 与 POST 方式的区别</h6><h6 id="session-与-cookie-区别"><a href="#session-与-cookie-区别" class="headerlink" title="session 与 cookie 区别"></a>session 与 cookie 区别</h6><h6 id="session-分布式处理"><a href="#session-分布式处理" class="headerlink" title="session 分布式处理"></a>session 分布式处理</h6><h6 id="JDBC-流程"><a href="#JDBC-流程" class="headerlink" title="JDBC 流程"></a>JDBC 流程</h6><h6 id="MVC-设计思想"><a href="#MVC-设计思想" class="headerlink" title="MVC 设计思想"></a>MVC 设计思想</h6><h6 id="equals-与-的区别"><a href="#equals-与-的区别" class="headerlink" title="equals 与 == 的区别"></a>equals 与 == 的区别</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h4&gt;&lt;h5 id=&quot;基本功&quot;&gt;&lt;a href=&quot;#基本功&quot; class=&quot;headerlink&quot; title=&quot;基本功&quot;&gt;&lt;/a&gt;基本功&lt;/h
      
    
    </summary>
    
    
      <category term="Java" scheme="https://sunshineuun.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="https://sunshineuun.github.io/2018/03/12/goDB/"/>
    <id>https://sunshineuun.github.io/2018/03/12/goDB/</id>
    <published>2018-03-12T12:45:01.000Z</published>
    <updated>2018-03-12T13:03:13.329Z</updated>
    
    <content type="html"><![CDATA[<h4 id="更新命令"><a href="#更新命令" class="headerlink" title="更新命令"></a>更新命令</h4><h5 id="update"><a href="#update" class="headerlink" title="update"></a>update</h5><p>格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.update(criteria,objNew,upsert,multi)</span><br></pre></td></tr></table></figure></p><p>参数说明如下：<br><strong>criteria</strong>：查询条件<br><strong>objNew</strong>：update对象和一些更新操作符<br><strong>upsert</strong>：如果不存在update的记录，是否插入objNew这个新的文档，true为插入，默认为false，不插入。<br><strong>multi</strong>：默认是false，只更新找到的第一条记录。如果为true，把按条件查询出来的记录全部更新。</p><h5 id="save"><a href="#save" class="headerlink" title="save"></a>save</h5><p>格式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.save(obj)</span><br></pre></td></tr></table></figure></p><p>参数说明如下：<br>obj：代表需要更新的对象，如果集合内部已经存在一个和obj相同的<strong>_id</strong>的记录，Mongodb会把obj对象替换集合内已存在的记录，如果不存在，则会插入obj对象。</p><h5 id="更新操作符号"><a href="#更新操作符号" class="headerlink" title="更新操作符号"></a>更新操作符号</h5><h6 id="inc"><a href="#inc" class="headerlink" title="$inc"></a>$inc</h6><p>用法：{$inc:{field:value}}<br>作用：对一个数字字段的某个field增加value<br>说明：只能运用在数值类型上</p><h6 id="set"><a href="#set" class="headerlink" title="$set"></a>$set</h6><p>用法：{$set:{field:value}}<br>作用：把文档中某个字段field的值设为value</p><h6 id="unset"><a href="#unset" class="headerlink" title="$unset"></a>$unset</h6><p>用法：{$unset:{field:1}}<br>作用：删除某个字段field</p><h6 id="push"><a href="#push" class="headerlink" title="$push"></a>$push</h6><p>用法：{$push:{field:value}}<br>作用：把value追加到field里。<br>说明：field只能是数组类型，如果field不存在，会自动插入一个数组类型</p><h6 id="pushAll"><a href="#pushAll" class="headerlink" title="pushAll"></a>pushAll</h6><p>用法：{$pushAll:{field:value_array}}<br>作用：用法同$push一样，只是$pushAll可以一次追加多个值到一个数组字段内。<br>说明：field只能是数组类型。</p><h6 id="addToSet"><a href="#addToSet" class="headerlink" title="$addToSet"></a>$addToSet</h6><p>用法：{$addToSet:{field:value}}<br>作用：加一个值到数组内，而且只有当这个值在数组中不存在时才增加。<br>说明：结果是append，不是add，就算存入的是数组，它也是单个值<br>举例：存入[ “A3”, “A4” ]的效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ &quot;Michael&quot;, &quot;A1&quot;, &quot;A2&quot;, [ &quot;A3&quot;, &quot;A4&quot; ] ]</span><br></pre></td></tr></table></figure></p><h6 id="pop"><a href="#pop" class="headerlink" title="$pop"></a>$pop</h6><p>用法：删除数组内第一个值：{$pop:{field:-1}}、删除数组内最后一个值：{$pop:{field:1}}<br>作用：用于删除数组内的一个值</p><h6 id="pull"><a href="#pull" class="headerlink" title="$pull"></a>$pull</h6><p>用法：{$pull:{field:_value}}<br>作用：从数组field内删除一个等于_value的值</p><h6 id="pullAll"><a href="#pullAll" class="headerlink" title="$pullAll"></a>$pullAll</h6><p>用法：{$pullAll:value_array}<br>作用：用法同$pull一样，可以一次性删除数组内的多个值。</p><h6 id="rename"><a href="#rename" class="headerlink" title="$rename"></a>$rename</h6><p>用法：{$rename:{old_field_name:new_field_name}}<br>作用：对字段进行重命名</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><a href="https://www.yiibai.com/mongodb/mongodb_quick_guide.html" target="_blank" rel="noopener">快速入门</a></li><li><a href="https://www.cnblogs.com/yu-zhang/p/5210966.html" target="_blank" rel="noopener">博客-更新命令(save,update)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;更新命令&quot;&gt;&lt;a href=&quot;#更新命令&quot; class=&quot;headerlink&quot; title=&quot;更新命令&quot;&gt;&lt;/a&gt;更新命令&lt;/h4&gt;&lt;h5 id=&quot;update&quot;&gt;&lt;a href=&quot;#update&quot; class=&quot;headerlink&quot; title=&quot;updat
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python常用命令</title>
    <link href="https://sunshineuun.github.io/2018/03/08/ython%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://sunshineuun.github.io/2018/03/08/ython常用命令/</id>
    <published>2018-03-08T09:01:41.000Z</published>
    <updated>2018-03-08T09:03:51.212Z</updated>
    
    <content type="html"><![CDATA[<p>python查看所有module api文档<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pydoc -p 4895</span><br></pre></td></tr></table></figure></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python查看所有module api文档&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>个人报销</title>
    <link href="https://sunshineuun.github.io/2018/03/06/%E4%BA%BA%E6%8A%A5%E9%94%80/"/>
    <id>https://sunshineuun.github.io/2018/03/06/人报销/</id>
    <published>2018-03-06T05:35:01.000Z</published>
    <updated>2018-03-06T05:35:36.787Z</updated>
    
    <content type="html"><![CDATA[<ul><li>交通费<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">23+73+92+15+51+45+50+35+32+18+81+124+38+55+130+40+99=1001</span><br><span class="line">164+87+294+197+18+44+22+40+18+14+14+14+47+27=1000</span><br><span class="line">224+19+35+19+59+69+32+110+24+17+29+43+17+21+27+46+27+39=800多</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;交通费&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MongoDB注册为windows服务</title>
    <link href="https://sunshineuun.github.io/2018/03/05/ngoDB%E6%B3%A8%E5%86%8Cwindows%E6%9C%8D%E5%8A%A1/"/>
    <id>https://sunshineuun.github.io/2018/03/05/ngoDB注册windows服务/</id>
    <published>2018-03-05T05:44:13.000Z</published>
    <updated>2018-03-05T05:46:37.531Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>以系统管理员身份打开“运行”窗口，输入cmd 回车，并切换至MongoDB的bin目录运行以下语句。</p></li><li><p>语句为： mongod.exe –dbpath=D:\install\MongoDB\data –logpath=D:\install\MongoDB\log\mongodb.log –install –serviceName “MongoDB”</p></li></ol><p>PS:惊讶–pbpath指的的mongodb安装路径，logpath指的是mongodb日志存放路径，–install –serviceName指的是安装成为系统服务，服务名称为 MongoDB</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;以系统管理员身份打开“运行”窗口，输入cmd 回车，并切换至MongoDB的bin目录运行以下语句。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;语句为： mongod.exe –dbpath=D:\install\MongoDB\data –logpath=D:\
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Selenium浏览器滚动条操作</title>
    <link href="https://sunshineuun.github.io/2018/03/05/lenium%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%93%8D%E4%BD%9C/"/>
    <id>https://sunshineuun.github.io/2018/03/05/lenium浏览器滚动条操作/</id>
    <published>2018-03-05T05:35:20.000Z</published>
    <updated>2018-03-05T05:40:49.153Z</updated>
    
    <content type="html"><![CDATA[<p>通过<code>driver.execute_script()</code>执行js代码进行操作。</p><p>滚动到底部<code>window.scrollTo(0, document.body.scrollHeight)</code><br>PS:其实就是通过<code>window.scrollTo()</code>进行处理的，第一个参数是横向向参数，第二个参数是纵向参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;通过&lt;code&gt;driver.execute_script()&lt;/code&gt;执行js代码进行操作。&lt;/p&gt;
&lt;p&gt;滚动到底部&lt;code&gt;window.scrollTo(0, document.body.scrollHeight)&lt;/code&gt;&lt;br&gt;PS:其实就是通过&lt;co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Winning-Tech-3月</title>
    <link href="https://sunshineuun.github.io/2018/03/02/nning-Tech/"/>
    <id>https://sunshineuun.github.io/2018/03/02/nning-Tech/</id>
    <published>2018-03-02T07:03:00.000Z</published>
    <updated>2018-03-02T08:46:37.670Z</updated>
    
    <content type="html"><![CDATA[<p>2018年3月</p><h6 id="公司计划"><a href="#公司计划" class="headerlink" title="公司计划"></a>公司计划</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root = /Winning/2018/3月份</span><br><span class="line">TASK1 - 部门经理分配的任务，【root/各主体资料库进度总览.xlsx】文档中，待爬取网站爬取可行性分析。</span><br><span class="line">TASK2 - 产品经理分配的任务，中药方剂库数据爬取。【root/中药方剂库-产品.xlsx】</span><br><span class="line">TASK3 - 产品迭代任务，2.8版本需求评估，开发。</span><br><span class="line">TASK4 - 数据挖掘组分配的任务，药品说明书网站数据爬取。目前只提供了一个网站，后续补充。</span><br></pre></td></tr></table></figure><h6 id="个人计划"><a href="#个人计划" class="headerlink" title="个人计划"></a>个人计划</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.react学习</span><br><span class="line">2.springboot学习</span><br><span class="line">3.前后端分离学习</span><br><span class="line">4.python爬虫进阶</span><br><span class="line">5.java、javaweb基础巩固</span><br><span class="line">6.servlet学习</span><br></pre></td></tr></table></figure><p><strong>2018年3月2日</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 中药方剂库数据爬取分析及其计划评估。TASK2</span><br><span class="line">2. KBMS bug修复，【社保药品分类与代码】查询后，树无限展开问题处理。</span><br><span class="line">3. KBMS2.8版本需求分析及其评估。TASK3</span><br><span class="line">4. 分析数据挖掘组需要爬取的网站。TASK1</span><br></pre></td></tr></table></figure></p><p><strong>2018年3月5日</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. 分析爬取网站的可行性。TASK1</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年3月&lt;/p&gt;
&lt;h6 id=&quot;公司计划&quot;&gt;&lt;a href=&quot;#公司计划&quot; class=&quot;headerlink&quot; title=&quot;公司计划&quot;&gt;&lt;/a&gt;公司计划&lt;/h6&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="Winning" scheme="https://sunshineuun.github.io/categories/Winning/"/>
    
    
      <category term="工作" scheme="https://sunshineuun.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Oracle日常错误</title>
    <link href="https://sunshineuun.github.io/2018/03/01/Oracle%E6%97%A5%E5%B8%B8%E9%94%99%E8%AF%AF/"/>
    <id>https://sunshineuun.github.io/2018/03/01/Oracle日常错误/</id>
    <published>2018-03-01T06:40:00.000Z</published>
    <updated>2018-03-01T06:44:53.130Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>在实际的 LONG 或 LOB 列之后提供了扩展的非 LONG 绑定数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在INSERT操作的时候，需要将LONG或者LOB类型的列放到其他类型的后面，否则出错</span><br></pre></td></tr></table></figure></li><li><p>ORA-01461: 仅能绑定要插入 LONG 列的 LONG 值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字段插入类型超过了VARCHAR2(4000),需要调整为CLOB类型。</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;在实际的 LONG 或 LOB 列之后提供了扩展的非 LONG 绑定数据&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1
      
    
    </summary>
    
    
      <category term="Oracle" scheme="https://sunshineuun.github.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Java错误日志_01</title>
    <link href="https://sunshineuun.github.io/2018/02/07/va%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97-01/"/>
    <id>https://sunshineuun.github.io/2018/02/07/va错误日志-01/</id>
    <published>2018-02-07T06:55:58.000Z</published>
    <updated>2018-02-07T07:03:06.284Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景描述"><a href="#背景描述" class="headerlink" title="背景描述"></a>背景描述</h5><p>在终端运行<code>java -jar xxx.jar</code>的时候。在终端运行可执行jar，jar包中带main方法。</p><h5 id="错误信息如下"><a href="#错误信息如下" class="headerlink" title="错误信息如下"></a>错误信息如下</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Error: A JNI error has occurred, please check your installation and try again</span><br><span class="line">Exception in thread &quot;main&quot; java.lang.SecurityException: Invalid signature file digest for Manifest main attributes</span><br><span class="line">        at sun.security.util.SignatureFileVerifier.processImpl(SignatureFileVerifier.java:284)</span><br><span class="line">        at sun.security.util.SignatureFileVerifier.process(SignatureFileVerifier.java:238)</span><br><span class="line">        at java.util.jar.JarVerifier.processEntry(JarVerifier.java:316)</span><br><span class="line">        at java.util.jar.JarVerifier.update(JarVerifier.java:228)</span><br><span class="line">        at java.util.jar.JarFile.initializeVerifier(JarFile.java:383)</span><br><span class="line">        at java.util.jar.JarFile.getInputStream(JarFile.java:450)</span><br><span class="line">        at sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:940)</span><br><span class="line">        at sun.misc.Resource.cachedInputStream(Resource.java:77)</span><br><span class="line">        at sun.misc.Resource.getByteBuffer(Resource.java:160)</span><br><span class="line">        at java.net.URLClassLoader.defineClass(URLClassLoader.java:454)</span><br><span class="line">        at java.net.URLClassLoader.access$100(URLClassLoader.java:73)</span><br><span class="line">        at java.net.URLClassLoader$1.run(URLClassLoader.java:368)</span><br><span class="line">        at java.net.URLClassLoader$1.run(URLClassLoader.java:362)</span><br><span class="line">        at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">        at java.net.URLClassLoader.findClass(URLClassLoader.java:361)</span><br><span class="line">        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span><br><span class="line">        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)</span><br><span class="line">        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span><br><span class="line">        at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:495)</span><br></pre></td></tr></table></figure><h5 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h5><p>删除对应目录下的三类文件<code>META-INF/*.RSA;META-INF/*.DSA;META-INF/*.SF</code>即可。</p><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="http://blog.csdn.net/dai451954706/article/details/50086295" target="_blank" rel="noopener">1</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;背景描述&quot;&gt;&lt;a href=&quot;#背景描述&quot; class=&quot;headerlink&quot; title=&quot;背景描述&quot;&gt;&lt;/a&gt;背景描述&lt;/h5&gt;&lt;p&gt;在终端运行&lt;code&gt;java -jar xxx.jar&lt;/code&gt;的时候。在终端运行可执行jar，jar包中带main方
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jrebel破解大法</title>
    <link href="https://sunshineuun.github.io/2018/02/07/ebel%E7%A0%B4%E8%A7%A3%E5%A4%A7%E6%B3%95/"/>
    <id>https://sunshineuun.github.io/2018/02/07/ebel破解大法/</id>
    <published>2018-02-07T05:42:14.000Z</published>
    <updated>2018-02-07T05:50:59.788Z</updated>
    
    <content type="html"><![CDATA[<h5 id="使用License-Server进行破解"><a href="#使用License-Server进行破解" class="headerlink" title="使用License Server进行破解"></a>使用License Server进行破解</h5><h6 id="搭建License-Server服务"><a href="#搭建License-Server服务" class="headerlink" title="搭建License Server服务"></a>搭建License Server服务</h6><ul><li>工具下载，百度网盘<a href="https://pan.baidu.com/s/1ggKESHP" target="_blank" rel="noopener">传送门</a>,密码<strong>zmzk</strong></li><li>将项目导入IDEA中，运行起来，或者打成jar进行运行。提示如下。对于端口冲突的话，修改端口会在后面提到。<br><img src="/images/pasted-43.png" alt="upload successful"></li><li>然后到IDEA中激活Jrebel。<br><img src="/images/pasted-42.png" alt="upload successful"></li><li>至此应该破解成功了。</li></ul><h6 id="端口修改"><a href="#端口修改" class="headerlink" title="端口修改"></a>端口修改</h6><p><img src="/images/pasted-44.png" alt="upload successful"></p><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="http://blog.csdn.net/weisheixiaoxin/article/details/79200535" target="_blank" rel="noopener">Jrebel 热部署 最新版破解 ！！监听端口实现 免费！转载博客于此</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;使用License-Server进行破解&quot;&gt;&lt;a href=&quot;#使用License-Server进行破解&quot; class=&quot;headerlink&quot; title=&quot;使用License Server进行破解&quot;&gt;&lt;/a&gt;使用License Server进行破解&lt;/h5&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React基础一</title>
    <link href="https://sunshineuun.github.io/2018/02/02/React%E5%9F%BA%E7%A1%80%E4%B8%80/"/>
    <id>https://sunshineuun.github.io/2018/02/02/React基础一/</id>
    <published>2018-02-02T02:44:00.000Z</published>
    <updated>2018-02-02T06:40:52.575Z</updated>
    
    <content type="html"><![CDATA[<h5 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g create-react-app       /* 安装create-react-app，建议使用cnpm */</span><br><span class="line">create-react-app myapp                 /* 使用命令创建应用，myapp为项目名称 */</span><br><span class="line">cd myapp                                        /* 进入目录，然后启动 */</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><h5 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h5><p>生成项目后，脚手架为了“优雅”… …隐藏了所有的webpack相关的配置文件，此时查看myapp文件夹目录，会发现找不到任何webpack配置文件。执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run eject</span><br></pre></td></tr></table></figure></p><h5 id="webpack3构建react工程"><a href="#webpack3构建react工程" class="headerlink" title="webpack3构建react工程"></a>webpack3构建react工程</h5><h6 id="安装webpack"><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装webpack</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev webpack</span><br></pre></td></tr></table></figure><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="https://www.jianshu.com/p/5e6c620ff4d6" target="_blank" rel="noopener">Create-React-App创建antd-mobile开发环境</a></li><li><a href="https://www.cnblogs.com/yswz/p/7165031.html" target="_blank" rel="noopener">使用babel-plugin-import实现antd组件库中的组件按需加载</a></li><li><a href="https://github.com/ant-design/babel-plugin-import" target="_blank" rel="noopener">babel-plugin-import github</a></li><li><a href="https://www.jianshu.com/p/b9e04d3c8650" target="_blank" rel="noopener">webpack3构建react工程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;项目创建&quot;&gt;&lt;a href=&quot;#项目创建&quot; class=&quot;headerlink&quot; title=&quot;项目创建&quot;&gt;&lt;/a&gt;项目创建&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
      <category term="React" scheme="https://sunshineuun.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>开发戒律</title>
    <link href="https://sunshineuun.github.io/2018/02/01/%E5%BC%80%E5%8F%91%E6%88%92%E5%BE%8B/"/>
    <id>https://sunshineuun.github.io/2018/02/01/开发戒律/</id>
    <published>2018-02-01T08:04:00.000Z</published>
    <updated>2018-02-01T08:06:14.668Z</updated>
    
    <content type="html"><![CDATA[<p>2018年2月1日16:04:51</p><ol><li>sql执行一定要使用绑定参数，不然出现以下特殊字符就出错。【’ ,】，英文的引号，逗号的。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年2月1日16:04:51&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sql执行一定要使用绑定参数，不然出现以下特殊字符就出错。【’ ,】，英文的引号，逗号的。&lt;/li&gt;
&lt;/ol&gt;

      
    
    </summary>
    
    
      <category term="告诫" scheme="https://sunshineuun.github.io/tags/%E5%91%8A%E8%AF%AB/"/>
    
  </entry>
  
  <entry>
    <title>Spring Security日常问题</title>
    <link href="https://sunshineuun.github.io/2018/02/01/Spring-Security%E6%97%A5%E5%B8%B8%E9%97%AE%E9%A2%98/"/>
    <id>https://sunshineuun.github.io/2018/02/01/Spring-Security日常问题/</id>
    <published>2018-02-01T07:40:00.000Z</published>
    <updated>2018-02-01T07:46:39.463Z</updated>
    
    <content type="html"><![CDATA[<h6 id="页面获取Spring-Security登录用户"><a href="#页面获取Spring-Security登录用户" class="headerlink" title="页面获取Spring Security登录用户"></a>页面获取Spring Security登录用户</h6><p>简介：  spring security 把SPRING_SECURITY_CONTEXT 放入了session 没有直接把username 放进去。</p><ul><li><p>前台取值方式一:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;session.SPRING_SECURITY_CONTEXT.authentication.principal.username&#125;</span><br></pre></td></tr></table></figure></li><li><p>前台取值方式二: 在页面端用tag获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=&apos;security&apos; uri=&apos;http://www.springframework.org/security/tags&apos;%&gt;</span><br><span class="line">    &lt;security:authentication property=&quot;principal.username&quot;&gt;&lt;/security:authentication&gt;</span><br></pre></td></tr></table></figure></li></ul><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;security:authorize ifAllGranted=&quot;ROLE_ADMIN&quot;&gt;  </span><br><span class="line">      &lt;security:authentication property=&quot;principal.username&quot;&gt;&lt;/security:authentication&gt;   </span><br><span class="line">&lt;/security:authorize&gt;</span><br></pre></td></tr></table></figure></p><ul><li>后台取值:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UserDetails userDetails = (UserDetails) SecurityContextHolder.getContext()  </span><br><span class="line">    .getAuthentication()  </span><br><span class="line">    .getPrincipal();  </span><br><span class="line">      </span><br><span class="line">userDetails.getUsername()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;页面获取Spring-Security登录用户&quot;&gt;&lt;a href=&quot;#页面获取Spring-Security登录用户&quot; class=&quot;headerlink&quot; title=&quot;页面获取Spring Security登录用户&quot;&gt;&lt;/a&gt;页面获取Spring Securi
      
    
    </summary>
    
    
      <category term="Spring Security" scheme="https://sunshineuun.github.io/tags/Spring-Security/"/>
    
  </entry>
  
  <entry>
    <title>TDC书单</title>
    <link href="https://sunshineuun.github.io/2018/02/01/TDC%E4%B9%A6%E5%8D%95/"/>
    <id>https://sunshineuun.github.io/2018/02/01/TDC书单/</id>
    <published>2018-02-01T02:45:45.000Z</published>
    <updated>2018-02-01T05:22:46.549Z</updated>
    
    <content type="html"><![CDATA[<p><strong>公告</strong><br>《分布式Java应用：基础与实践》书本找回，谁借用这本书，未告知管理员的，请及时告知。<br>感谢。</p><hr><p><strong>为了保证资源能够充分利用，在书闲置之时，请各位及时还书。</strong><br><strong>可以在下方留言，邮箱，扣扣等方式告知，到我这里拿钥匙，或者我可以给你送过去。</strong><br><strong>感谢合作！</strong></p><ul><li>联系人：邱胜明</li><li>手机号码：15958624595</li><li>QQ：583853240</li><li>邮箱：qiushengming@tech-winning.com</li></ul><hr><table><thead><tr><th style="text-align:left">书名</th><th style="text-align:center">作者</th><th style="text-align:right">借书日期</th><th style="text-align:right">还书日期</th><th style="text-align:right">借书人</th></tr></thead><tbody><tr><td style="text-align:left">京东系统质量保障技术实战</td><td style="text-align:center">商城研发POP平台 著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">MongoDB实战（第二版）</td><td style="text-align:center">华中科技大学出版社</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Java多线程编程核心技术</td><td style="text-align:center">高洪岩</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">精通自动化测试框架设计</td><td style="text-align:center">陈冬严</td><td style="text-align:right">2018/1/31</td><td style="text-align:right">2018/2/22</td><td style="text-align:right">陈进美</td></tr><tr><td style="text-align:left">Web接口开发与自动化测试――基于Python语言</td><td style="text-align:center">虫师</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">-</td><td style="text-align:right">陈俊杰</td></tr><tr><td style="text-align:left">Selenium2自动化测试实战基于Python语言</td><td style="text-align:center">虫师</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Python核心编程（第3版）</td><td style="text-align:center">[美]WesleyChun著；孙波翔，李斌，李晗译</td><td style="text-align:right">2018/1/31</td><td style="text-align:right">2018/2/28</td><td style="text-align:right">吴维维</td></tr><tr><td style="text-align:left">Docker经典实例</td><td style="text-align:center">[美]戈阿冈（SébastienGoasguen）著；刘斌译</td><td style="text-align:right">2018/1/31</td><td style="text-align:right">2018/2/28</td><td style="text-align:right">吴维维</td></tr><tr><td style="text-align:left">深入浅出Node.js</td><td style="text-align:center">朴灵</td><td style="text-align:right">2018/2/1</td><td style="text-align:right"></td><td style="text-align:right">范健伟</td></tr><tr><td style="text-align:left">Spring源码深度解析</td><td style="text-align:center">郝佳</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">-</td><td style="text-align:right">杨浩</td></tr><tr><td style="text-align:left">大型网站系统与Java中间件实践</td><td style="text-align:center">曾宪杰</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">分布式Java应用：基础与实践</td><td style="text-align:center">林昊</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">深度学习入门之PyTorch</td><td style="text-align:center">廖星宇</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">TensorFlow：实战Google深度学习框架</td><td style="text-align:center">才云科技Caicloud，郑泽宇，顾思宇著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">TensorFlow技术解析与实战</td><td style="text-align:center">李嘉璇</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Redis开发与运维</td><td style="text-align:center">付磊</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/20</td><td style="text-align:right">于祥通</td></tr><tr><td style="text-align:left">分布式服务框架原理与实践</td><td style="text-align:center">李林锋</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/20</td><td style="text-align:right">于祥通</td></tr><tr><td style="text-align:left">Java性能权威指南</td><td style="text-align:center">奥克斯</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/20</td><td style="text-align:right">于祥通</td></tr><tr><td style="text-align:left">Redis开发与运维</td><td style="text-align:center">付磊，张益军著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">分布式服务架构：原理、设计与实战</td><td style="text-align:center">李艳鹏，杨彪著</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/4/28</td><td style="text-align:right">田升</td></tr><tr><td style="text-align:left">WebAPI的设计与开发</td><td style="text-align:center">水野贵明著；盛荣译</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/3/15</td><td style="text-align:right">万玉</td></tr><tr><td style="text-align:left">看透SpringMVC:源代码分析与实践</td><td style="text-align:center">韩路彪著</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/3/1</td><td style="text-align:right">尚梦思</td></tr><tr><td style="text-align:left">HTML5+CSS3+JavaScript从入门到精通（标准版</td><td style="text-align:center">未来科技著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">程序员的修炼——从优秀到卓越</td><td style="text-align:center">[美]Jeff,Atwood著</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">Oracle性能诊断艺术（第2版）</td><td style="text-align:center">[瑞士]ChristianAntognini著；王作佳，刘迪译</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">-</td><td style="text-align:right">许林峰</td></tr><tr><td style="text-align:left">高性能MySQL（第3版）</td><td style="text-align:center">BaronSchwartz<br>PeterZaitsev<br>VadimTkachenko著；<br>宁海元，周振兴，彭立勋等译</td><td style="text-align:right"></td><td style="text-align:right"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left">疯狂SpringCloud微服务架构实战</td><td style="text-align:center">作者：杨恩雄</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">2018/2/25</td><td style="text-align:right">李赏</td></tr><tr><td style="text-align:left">Node.js微服务</td><td style="text-align:center">DavidGonzalez著赵震一郑伟杰译</td><td style="text-align:right">2018/2/1</td><td style="text-align:right">-</td><td style="text-align:right">范建伟</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;公告&lt;/strong&gt;&lt;br&gt;《分布式Java应用：基础与实践》书本找回，谁借用这本书，未告知管理员的，请及时告知。&lt;br&gt;感谢。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;为了保证资源能够充分利用，在书闲置之时，请各位及时还书。&lt;/strong&gt;&lt;br&gt;&lt;s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mybatis Generator配置详解</title>
    <link href="https://sunshineuun.github.io/2018/01/31/Mybatis-Generator%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>https://sunshineuun.github.io/2018/01/31/Mybatis-Generator配置详解/</id>
    <published>2018-01-31T04:26:00.000Z</published>
    <updated>2018-01-31T04:39:29.774Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Mybatis-Generator配置详解"><a href="#Mybatis-Generator配置详解" class="headerlink" title="Mybatis Generator配置详解"></a>Mybatis Generator配置详解</h5><h6 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h6><p>使用这个插件可以快速生成一些代码,包含<code>实体类/Mapper接口/*Mapper.xml文件</code>。笔者用IDEA开发环境，利用MAVEN进行构建。<br>参考官方文档点击<a href="http://www.mybatis.org/generator/running/runningWithMaven.html" target="_blank" rel="noopener">传送门</a>前往。</p><h6 id="POM文件配置如下"><a href="#POM文件配置如下" class="headerlink" title="POM文件配置如下"></a>POM文件配置如下</h6><p>注意,<code>plugins</code>标签是<code>build</code>标签的子标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugins&gt;</span><br><span class="line">      &lt;plugin&gt;</span><br><span class="line">        &lt;!--Mybatis-generator插件,用于自动生成Mapper和POJO--&gt;</span><br><span class="line">        &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">        &lt;configuration&gt;</span><br><span class="line">          &lt;!--配置文件的位置--&gt;</span><br><span class="line">          &lt;configurationFile&gt;yourLocation/mybatis-generator-config.xml&lt;/configurationFile&gt;</span><br><span class="line">          &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">          &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">        &lt;/configuration&gt;</span><br><span class="line">        &lt;executions&gt;</span><br><span class="line">          &lt;execution&gt;</span><br><span class="line">            &lt;id&gt;Generate MyBatis Artifacts&lt;/id&gt;</span><br><span class="line">            &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;generate&lt;/goal&gt;</span><br><span class="line">            &lt;/goals&gt;</span><br><span class="line">          &lt;/execution&gt;</span><br><span class="line">        &lt;/executions&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">          &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">          &lt;/dependency&gt;</span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">      &lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br></pre></td></tr></table></figure></p><h6 id="Mybatis-Generator配置如下"><a href="#Mybatis-Generator配置如下" class="headerlink" title="Mybatis Generator配置如下"></a>Mybatis Generator配置如下</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">  PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;!-- 配置生成器 --&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">&lt;!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用$&#123;propertyKey&#125;的方式来引用配置项</span><br><span class="line">    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties        </span><br><span class="line">    url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.</span><br><span class="line">    注意，两个属性只能选址一个;</span><br><span class="line"></span><br><span class="line">    另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用</span><br><span class="line">&lt;properties resource=&quot;&quot; url=&quot;&quot; /&gt;</span><br><span class="line"> --&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!-- 在MBG工作的时候，需要额外加载的依赖包</span><br><span class="line">     location属性指明加载jar/zip包的全路径</span><br><span class="line">&lt;classPathEntry location=&quot;/Program Files/IBM/SQLLIB/java/db2java.zip&quot; /&gt;</span><br><span class="line">  --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- </span><br><span class="line">    context:生成一组对象的环境 </span><br><span class="line">    id:必选，上下文id，用于在生成错误时提示</span><br><span class="line">    defaultModelType:指定生成对象的样式</span><br><span class="line">        1，conditional：类似hierarchical；</span><br><span class="line">        2，flat：所有内容（主键，blob）等全部生成在一个对象中；</span><br><span class="line">        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)</span><br><span class="line">    targetRuntime:</span><br><span class="line">        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；</span><br><span class="line">        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；</span><br><span class="line">    introspectedColumnImpl：类全限定名，用于扩展MBG</span><br><span class="line">--&gt;</span><br><span class="line">&lt;context id=&quot;mysql&quot; defaultModelType=&quot;hierarchical&quot; targetRuntime=&quot;MyBatis3Simple&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；</span><br><span class="line">        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;property name=&quot;autoDelimitKeywords&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">    &lt;!-- 生成的Java文件的编码 --&gt;</span><br><span class="line">    &lt;property name=&quot;javaFileEncoding&quot; value=&quot;UTF-8&quot;/&gt;</span><br><span class="line">    &lt;!-- 格式化java代码 --&gt;</span><br><span class="line">    &lt;property name=&quot;javaFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultJavaFormatter&quot;/&gt;</span><br><span class="line">    &lt;!-- 格式化XML代码 --&gt;</span><br><span class="line">    &lt;property name=&quot;xmlFormatter&quot; value=&quot;org.mybatis.generator.api.dom.DefaultXmlFormatter&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； --&gt;</span><br><span class="line">    &lt;property name=&quot;beginningDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line">    &lt;property name=&quot;endingDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 必须要有的，使用这个配置链接数据库</span><br><span class="line">        @TODO:是否可以扩展</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql:///pss&quot; userId=&quot;root&quot; password=&quot;admin&quot;&gt;</span><br><span class="line">        &lt;!-- 这里面可以设置property属性，每一个property属性都设置到配置的Driver上 --&gt;</span><br><span class="line">    &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- java类型处理器 </span><br><span class="line">        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；</span><br><span class="line">        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型； </span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;javaTypeResolver type=&quot;org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl&quot;&gt;</span><br><span class="line">        &lt;!-- </span><br><span class="line">            true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型</span><br><span class="line">            false：默认,</span><br><span class="line">                scale&gt;0;length&gt;18：使用BigDecimal;</span><br><span class="line">                scale=0;length[10,18]：使用Long；</span><br><span class="line">                scale=0;length[5,9]：使用Integer；</span><br><span class="line">                scale=0;length&lt;5：使用Short；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">    &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- java模型创建器，是必须要的元素</span><br><span class="line">        负责：1，key类（见context的defaultModelType）；2，java类；3，查询类</span><br><span class="line">        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；</span><br><span class="line">        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;javaModelGenerator targetPackage=&quot;com._520it.mybatis.domain&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">        &lt;!--  for MyBatis3/MyBatis3Simple</span><br><span class="line">            自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- for MyBatis3 / MyBatis3Simple</span><br><span class="line">            是否创建一个不可变的类，如果为true，</span><br><span class="line">            那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 设置一个根对象，</span><br><span class="line">            如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项</span><br><span class="line">            注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：</span><br><span class="line">                1，属性名相同，类型相同，有相同的getter/setter方法；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;rootClass&quot; value=&quot;com._520it.mybatis.domain.BaseDomain&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --&gt;</span><br><span class="line">        &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 生成SQL map的XML文件生成器，</span><br><span class="line">        注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），</span><br><span class="line">            或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置</span><br><span class="line">        targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;sqlMapGenerator targetPackage=&quot;com._520it.mybatis.mapper&quot; targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">        &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">    &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口 </span><br><span class="line">        targetPackage/targetProject:同javaModelGenerator</span><br><span class="line">        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：</span><br><span class="line">            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；</span><br><span class="line">            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；</span><br><span class="line">            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；</span><br><span class="line">        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;javaClientGenerator targetPackage=&quot;com._520it.mybatis.mapper&quot; type=&quot;ANNOTATEDMAPPER&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">        &lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --&gt;</span><br><span class="line">        &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查</span><br><span class="line">        &lt;property name=&quot;rootInterface&quot; value=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line">    &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素</span><br><span class="line">        选择的table会生成一下文件：</span><br><span class="line">        1，SQL map文件</span><br><span class="line">        2，生成一个主键类；</span><br><span class="line">        3，除了BLOB和主键的其他字段的类；</span><br><span class="line">        4，包含BLOB的类；</span><br><span class="line">        5，一个用户生成动态查询的条件类（selectByExample, deleteByExample），可选；</span><br><span class="line">        6，Mapper接口（可选）</span><br><span class="line"></span><br><span class="line">        tableName（必要）：要生成对象的表名；</span><br><span class="line">        注意：大小写敏感问题。正常情况下，MBG会自动的去识别数据库标识符的大小写敏感度，在一般情况下，MBG会</span><br><span class="line">            根据设置的schema，catalog或tablename去查询数据表，按照下面的流程：</span><br><span class="line">            1，如果schema，catalog或tablename中有空格，那么设置的是什么格式，就精确的使用指定的大小写格式去查询；</span><br><span class="line">            2，否则，如果数据库的标识符使用大写的，那么MBG自动把表名变成大写再查找；</span><br><span class="line">            3，否则，如果数据库的标识符使用小写的，那么MBG自动把表名变成小写再查找；</span><br><span class="line">            4，否则，使用指定的大小写格式查询；</span><br><span class="line">        另外的，如果在创建表的时候，使用的&quot;&quot;把数据库对象规定大小写，就算数据库标识符是使用的大写，在这种情况下也会使用给定的大小写来创建表名；</span><br><span class="line">        这个时候，请设置delimitIdentifiers=&quot;true&quot;即可保留大小写格式；</span><br><span class="line"></span><br><span class="line">        可选：</span><br><span class="line">        1，schema：数据库的schema；</span><br><span class="line">        2，catalog：数据库的catalog；</span><br><span class="line">        3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName</span><br><span class="line">        4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；</span><br><span class="line">        5，enableInsert（默认true）：指定是否生成insert语句；</span><br><span class="line">        6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；</span><br><span class="line">        7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；</span><br><span class="line">        8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；</span><br><span class="line">        9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；</span><br><span class="line">        10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；</span><br><span class="line">        11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；</span><br><span class="line">        12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；</span><br><span class="line">        13，modelType：参考context元素的defaultModelType，相当于覆盖；</span><br><span class="line">        14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）</span><br><span class="line">        15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性</span><br><span class="line"></span><br><span class="line">        注意，table里面很多参数都是对javaModelGenerator，context等元素的默认属性的一个复写；</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;table tableName=&quot;userinfo&quot; &gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考 javaModelGenerator 的 constructorBased属性--&gt;</span><br><span class="line">        &lt;property name=&quot;constructorBased&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； --&gt;</span><br><span class="line">        &lt;property name=&quot;ignoreQualifiersAtRuntime&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考 javaModelGenerator 的 immutable 属性 --&gt;</span><br><span class="line">        &lt;property name=&quot;immutable&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 --&gt;</span><br><span class="line">        &lt;property name=&quot;modelOnly&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考 javaModelGenerator 的 rootClass 属性 </span><br><span class="line">        &lt;property name=&quot;rootClass&quot; value=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 参考javaClientGenerator 的  rootInterface 属性</span><br><span class="line">        &lt;property name=&quot;rootInterface&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置了runtimeCatalog，那么在生成的SQL中，使用该指定的catalog，而不是table元素上的catalog </span><br><span class="line">        &lt;property name=&quot;runtimeCatalog&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置了runtimeSchema，那么在生成的SQL中，使用该指定的schema，而不是table元素上的schema </span><br><span class="line">        &lt;property name=&quot;runtimeSchema&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置了runtimeTableName，那么在生成的SQL中，使用该指定的tablename，而不是table元素上的tablename </span><br><span class="line">        &lt;property name=&quot;runtimeTableName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">        --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 注意，该属性只针对MyBatis3Simple有用；</span><br><span class="line">            如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;property name=&quot;selectAllOrderByClause&quot; value=&quot;age desc,username asc&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate --&gt;</span><br><span class="line">        &lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;!-- generatedKey用于生成生成主键的方法，</span><br><span class="line">            如果设置了该元素，MBG会在生成的&lt;insert&gt;元素中生成一条正确的&lt;selectKey&gt;元素，该元素可选</span><br><span class="line">            column:主键的列名；</span><br><span class="line">            sqlStatement：要生成的selectKey语句，有以下可选项：</span><br><span class="line">                Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1</span><br><span class="line">                Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()</span><br><span class="line">                HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()</span><br><span class="line">                Informix  :相当于selectKey的SQL为：select dbinfo(&apos;sqlca.sqlerrd1&apos;) from systables where tabid=1</span><br><span class="line">                MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()</span><br><span class="line">                SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()</span><br><span class="line">                SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY</span><br><span class="line">                JDBC      :相当于在生成的insert元素上添加useGeneratedKeys=&quot;true&quot;和keyProperty属性</span><br><span class="line">        &lt;generatedKey column=&quot;&quot; sqlStatement=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- </span><br><span class="line">            该元素会在根据表中列名计算对象属性名之前先重命名列名，非常适合用于表中的列都有公用的前缀字符串的时候，</span><br><span class="line">            比如列名为：CUST_ID,CUST_NAME,CUST_EMAIL,CUST_ADDRESS等；</span><br><span class="line">            那么就可以设置searchString为&quot;^CUST_&quot;，并使用空白替换，那么生成的Customer对象中的属性名称就不是</span><br><span class="line">            custId,custName等，而是先被替换为ID,NAME,EMAIL,然后变成属性：id，name，email；</span><br><span class="line"></span><br><span class="line">            注意，MBG是使用java.util.regex.Matcher.replaceAll来替换searchString和replaceString的，</span><br><span class="line">            如果使用了columnOverride元素，该属性无效；</span><br><span class="line"></span><br><span class="line">        &lt;columnRenamingRule searchString=&quot;&quot; replaceString=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         &lt;!-- 用来修改表中某个列的属性，MBG会使用修改后的列来生成domain的属性；</span><br><span class="line">             column:要重新设置的列名；</span><br><span class="line">             注意，一个table元素中可以有多个columnOverride元素哈~</span><br><span class="line">          --&gt;</span><br><span class="line">         &lt;columnOverride column=&quot;username&quot;&gt;</span><br><span class="line">             &lt;!-- 使用property属性来指定列要生成的属性名称 --&gt;</span><br><span class="line">             &lt;property name=&quot;property&quot; value=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- javaType用于指定生成的domain的属性类型，使用类型的全限定名</span><br><span class="line">             &lt;property name=&quot;javaType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">              --&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- jdbcType用于指定该列的JDBC类型 </span><br><span class="line">             &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">              --&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- typeHandler 用于指定该列使用到的TypeHandler，如果要指定，配置类型处理器的全限定名</span><br><span class="line">                 注意，mybatis中，不会生成到mybatis-config.xml中的typeHandler</span><br><span class="line">                 只会生成类似：where id = #&#123;id,jdbcType=BIGINT,typeHandler=com._520it.mybatis.MyTypeHandler&#125;的参数描述</span><br><span class="line">             &lt;property name=&quot;jdbcType&quot; value=&quot;&quot;/&gt;</span><br><span class="line">             --&gt;</span><br><span class="line"></span><br><span class="line">             &lt;!-- 参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line">             &lt;property name=&quot;delimitedColumnName&quot; value=&quot;&quot;/&gt;</span><br><span class="line">              --&gt;</span><br><span class="line">         &lt;/columnOverride&gt;</span><br><span class="line"></span><br><span class="line">         &lt;!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现 </span><br><span class="line">             column:指定要忽略的列的名字；</span><br><span class="line">             delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false</span><br><span class="line"></span><br><span class="line">             注意，一个table元素中可以有多个ignoreColumn元素</span><br><span class="line">         &lt;ignoreColumn column=&quot;deptId&quot; delimitedColumnName=&quot;&quot;/&gt;</span><br><span class="line">         --&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/context&gt;</span><br><span class="line"></span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Mybatis-Generator配置详解&quot;&gt;&lt;a href=&quot;#Mybatis-Generator配置详解&quot; class=&quot;headerlink&quot; title=&quot;Mybatis Generator配置详解&quot;&gt;&lt;/a&gt;Mybatis Generator配置详解&lt;/
      
    
    </summary>
    
    
      <category term="Mybatis" scheme="https://sunshineuun.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>火狐浏览器打开新页签不断刷新</title>
    <link href="https://sunshineuun.github.io/2018/01/30/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%93%E5%BC%80%E6%96%B0%E9%A1%B5%E7%AD%BE%E4%B8%8D%E6%96%AD%E5%88%B7%E6%96%B0/"/>
    <id>https://sunshineuun.github.io/2018/01/30/浏览器打开新页签不断刷新/</id>
    <published>2018-01-30T02:09:07.000Z</published>
    <updated>2018-01-30T02:15:10.808Z</updated>
    
    <content type="html"><![CDATA[<h5 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h5><p>用旧版本覆盖了新版本的火狐，导致新标签页数据损坏。</p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>地址栏输入<code>about:support</code>根据提示打开<strong>配置文件夹</strong>，删除<strong>storage文件夹、及其已storage为名的文件</strong>并且重启火狐。笔者亲测有效。</p><p><img src="/images/pasted-41.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h5&gt;&lt;p&gt;用旧版本覆盖了新版本的火狐，导致新标签页数据损坏。&lt;/p&gt;
&lt;h5 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;hea
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Oracle数值类型主键自增长</title>
    <link href="https://sunshineuun.github.io/2018/01/29/Oracle%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B8%BB%E9%94%AE%E8%87%AA%E5%A2%9E%E9%95%BF/"/>
    <id>https://sunshineuun.github.io/2018/01/29/Oracle数值类型主键自增长/</id>
    <published>2018-01-29T05:47:00.000Z</published>
    <updated>2018-01-29T05:54:00.971Z</updated>
    
    <content type="html"><![CDATA[<h5 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> CREATE TABLE K_USER (</span><br><span class="line">  ID       NUMBER PRIMARY KEY,</span><br><span class="line">  USER_NAME VARCHAR(45) NOT NULL,</span><br><span class="line">  pd VARCHAR(45) NOT NULL,</span><br><span class="line">  ENABLED  NUMBER DEFAULT 1 NOT NULL</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="创建自增序列"><a href="#创建自增序列" class="headerlink" title="创建自增序列"></a>创建自增序列</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE SEQUENCE K_USER_ID_AUTOINC -- 序列的名称</span><br><span class="line"> MINVALUE 1 -- 最小值</span><br><span class="line"> MAXVALUE 99999999 -- 最大值</span><br><span class="line"> START WITH 1 -- 从多少开始</span><br><span class="line"> INCREMENT BY 1 -- 每次序列加多少</span><br><span class="line"> NOCACHE;</span><br></pre></td></tr></table></figure><h5 id="创建序列"><a href="#创建序列" class="headerlink" title="创建序列"></a>创建序列</h5> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE TRIGGER K_USER_ID_TRIGGER -- 监听的名称</span><br><span class="line"> BEFORE INSERT ON K_USER FOR EACH ROW WHEN (new.ID IS NULL)</span><br><span class="line"> -- 在插入循环ID为空的列</span><br><span class="line">   BEGIN</span><br><span class="line">     SELECT K_USER_ID_AUTOINC.nextval INTO :new.id FROM dual;</span><br><span class="line">   END;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;创建表&quot;&gt;&lt;a href=&quot;#创建表&quot; class=&quot;headerlink&quot; title=&quot;创建表&quot;&gt;&lt;/a&gt;创建表&lt;/h5&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="Oracle" scheme="https://sunshineuun.github.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu常用操作命令</title>
    <link href="https://sunshineuun.github.io/2018/01/26/untu%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>https://sunshineuun.github.io/2018/01/26/untu常用操作命令/</id>
    <published>2018-01-26T05:09:17.000Z</published>
    <updated>2018-01-26T06:08:29.594Z</updated>
    
    <content type="html"><![CDATA[<h5 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h5><h6 id="文件进入"><a href="#文件进入" class="headerlink" title="文件进入"></a>文件进入</h6><ol><li><code>cd 路径</code>;</li><li><code>cd ..</code>; 返回上一个文件夹</li><li><code>sudo</code>; 获取root权限，需要输入root权限的密码。</li></ol><h6 id="文件创建"><a href="#文件创建" class="headerlink" title="文件创建"></a>文件创建</h6><ol><li><code>mkdir 名称</code>; 新建一个文件夹</li><li><code>touch 名称</code>; 新建一个空文件。</li></ol><h6 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h6><ol><li><code>rmdir 目录名</code>; 删除一个空的文件夹(目录)</li><li><code>rm -rf 目录名</code>; 删除一个非空的文件夹(目录)</li><li><code>rm 文件名,文件名</code>; 删除多个文件</li></ol><h6 id="文件复制"><a href="#文件复制" class="headerlink" title="文件复制"></a>文件复制</h6><ol><li><code>cp 文件名 目标路径</code>; 拷贝文件到目标路径下</li><li><code>cp -i</code>; 拷贝，同名文件存在时，输出[yes/no]的询问</li><li><code>cp -f</code>; 强制复制文件,如果同名不询问</li></ol><h6 id="文件剪切"><a href="#文件剪切" class="headerlink" title="文件剪切"></a>文件剪切</h6><ol><li><code>mv jdk1.8.0_20/ /usr/lib/jvm///</code>；可剪切文件目录</li></ol><h6 id="常用解压，安装，文件更新"><a href="#常用解压，安装，文件更新" class="headerlink" title="常用解压，安装，文件更新"></a>常用解压，安装，文件更新</h6><ol><li><code>tar -zxvf  *.tar.gz</code> 解压tar.gz格式的文件</li><li><code>source *.install</code> 安装install格式的安装包</li><li><code>sh 路径/x.sh</code> 安装sh格式的文件</li><li><code>apt-get upgrade</code> 更新已安装的包</li><li><code>apt-get update</code> 更新源</li></ol><h5 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h5><ol><li><code>netstat -nltp</code> 查看启动的进程</li><li><code>kill -9 pid</code>，参数-9强制杀进程，参数pid对应的进程pid。</li><li>内存查询命令<code>free</code>命令<ul><li>功能说明: 显示内存状态。</li><li>语法: <code>free [-bkmotV][-s ]</code>。</li><li>补充说明: free指令会显示内存的使用情况，包括实体内存，虚拟的交换文档内存，共享内存区段，连同系统核心使用的缓冲区等。</li><li>参数：<br>　　        1. -b 　   以Byte为单位显示内存使用情况。<br>　　        2. -k 　  以KB为单位显示内存使用情况。<br>　　        3. -m 　 以MB为单位显示内存使用情况。<br>　　        4. -o 　  不显示缓冲区调节列。<br>　　        5. -s 　  持续观察内存使用状况。<br>　　        6. -t 　   显示内存总和列。<br>　　        7. -V 　 显示版本信息。</li></ul></li></ol><h5 id="开关机操作"><a href="#开关机操作" class="headerlink" title="开关机操作"></a>开关机操作</h5><ol><li><code>reboot</code> 重启</li><li><code>shutdown -r now</code>; 立即重启，需root权限</li><li><code>shutdown -r 10</code>,;10分钟后自动重启，时间自由调整，单位分，需root权限</li><li><code>halt</code>立即关机</li><li><code>poweroff</code>立刻关机</li><li><code>shutdown -h now</code>立刻关机</li><li><code>shutdown -h 10</code>;10分钟后自动关机，时间自由调整，单位分，需root权限</li><li><p><code>shutdown -c</code>;取消关机重启</p><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><h6 id="Ubuntu实时查看tomcat运行log"><a href="#Ubuntu实时查看tomcat运行log" class="headerlink" title="Ubuntu实时查看tomcat运行log"></a>Ubuntu实时查看tomcat运行log</h6><ul><li>找到tomcat安装目录：cd tomcat/logs</li><li>tail -f catalina.out</li><li>ctrl+c 退出</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h5&gt;&lt;h6 id=&quot;文件进入&quot;&gt;&lt;a href=&quot;#文件进入&quot; class=&quot;headerlink&quot; title=&quot;文件进入&quot;&gt;&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins Install</title>
    <link href="https://sunshineuun.github.io/2018/01/26/Jenkins-Install/"/>
    <id>https://sunshineuun.github.io/2018/01/26/Jenkins-Install/</id>
    <published>2018-01-26T04:51:00.000Z</published>
    <updated>2018-01-26T05:02:43.868Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>Jenkins自动化部署打包系统，百度百科<a href="https://baike.baidu.com/item/Jenkins/10917210?fr=aladdin" target="_blank" rel="noopener">传送门</a><br>笔者安装在Ubuntu环境上。</p><h5 id="Jenkins-Install"><a href="#Jenkins-Install" class="headerlink" title="Jenkins Install"></a>Jenkins Install</h5><p><a href="http://www.linuxidc.com/Linux/2016-12/138290.htm" target="_blank" rel="noopener">传送门</a></p><h5 id="Jenkins-UnInstall"><a href="#Jenkins-UnInstall" class="headerlink" title="Jenkins UnInstall"></a>Jenkins UnInstall</h5><p><a href="https://www.cnblogs.com/wangcp-2014/p/6978245.html" target="_blank" rel="noopener">传送门</a></p><h5 id="Git-Install"><a href="#Git-Install" class="headerlink" title="Git Install"></a>Git Install</h5><p>执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git</span><br></pre></td></tr></table></figure></p><h5 id="Maven-Install"><a href="#Maven-Install" class="headerlink" title="Maven Install"></a>Maven Install</h5><ul><li>下载Maven的安装包</li><li>安装命令如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 解压</span><br><span class="line">tar zxvf apache-maven-3.3.9.bin.tar.gz</span><br><span class="line"></span><br><span class="line"># 增加环境变量</span><br><span class="line">vi /etc/profile</span><br><span class="line"># 在打开文件尾部增加以下内容</span><br><span class="line">M2_HOME=/usr/local/apache-maven-3.3.9 # 此路径是你maven解压缩文件的路径。</span><br><span class="line">PATH=$M2_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h5&gt;&lt;p&gt;Jenkins自动化部署打包系统，百度百科&lt;a href=&quot;https://baike.baidu.com/item/Jenkins/109
      
    
    </summary>
    
    
      <category term="JenKins" scheme="https://sunshineuun.github.io/tags/JenKins/"/>
    
      <category term="自动化构建" scheme="https://sunshineuun.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA/"/>
    
  </entry>
  
</feed>
