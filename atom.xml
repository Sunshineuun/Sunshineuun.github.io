<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Minnie技术博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sunshineuun.github.io/"/>
  <updated>2018-01-19T13:51:03.626Z</updated>
  <id>https://sunshineuun.github.io/</id>
  
  <author>
    <name>邱胜明</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Angular CLI 安装和使用</title>
    <link href="https://sunshineuun.github.io/2018/01/19/Angular-CLI-%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://sunshineuun.github.io/2018/01/19/Angular-CLI-安装和使用/</id>
    <published>2018-01-19T13:20:00.000Z</published>
    <updated>2018-01-19T13:51:03.626Z</updated>
    
    <content type="html"><![CDATA[<h5 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h5><ol><li>关于Angular版本，Angular官方已经统一命名<code>Angular 1.x</code>统称为<code>Angular JS</code>；<code>Angular 2.x</code>及以上统称<code>Angular</code>；</li><li><code>CLI</code>是<code>Command Line Interface</code>的简写，是一种命令行接口，实现自动化开发流程，比如：ionic cli、vue cli等；它可以创建项目、添加文件以及执行一大堆开发任务，比如测试、打包和发布。</li></ol><h5 id="安装Angular-CLI"><a href="#安装Angular-CLI" class="headerlink" title="安装Angular CLI"></a>安装Angular CLI</h5><ul><li><p>确认是否安装node和npm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v # 6.9.4</span><br><span class="line">npm -v # 3.10.10</span><br><span class="line">// node 版本高于6.9.3  npm版本高于3.0.0</span><br></pre></td></tr></table></figure></li><li><p>设置淘宝镜像，安装node-sass</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">设置环境变量</span><br><span class="line">set SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/</span><br><span class="line">npm install node-sass</span><br></pre></td></tr></table></figure></li><li><p>安装Angular CLI</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @angular/cli</span><br></pre></td></tr></table></figure></li><li><p>验证，执行<code>ng v</code>命令。出现下图情况则为安装成功。</p></li></ul><p><img src="/images/pasted-24.png" alt="upload successful"></p><h5 id="基于IDEA创建第一个AngularJS想用"><a href="#基于IDEA创建第一个AngularJS想用" class="headerlink" title="基于IDEA创建第一个AngularJS想用"></a>基于IDEA创建第一个AngularJS想用</h5><ul><li><p>创建项目,Anaular CLI选项，就是刚刚安装的。<br><img src="/images/pasted-25.png" alt="upload successful"><br><img src="/images/pasted-26.png" alt="upload successful"></p></li><li><p>创建的过程会下载创建一些资源如下图：<br><img src="/images/pasted-27.png" alt="upload successful"></p></li><li><p>使用<code>ng server</code>启动服务，访问端口<code>localhost:4200</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;背景介绍&quot;&gt;&lt;a href=&quot;#背景介绍&quot; class=&quot;headerlink&quot; title=&quot;背景介绍&quot;&gt;&lt;/a&gt;背景介绍&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;关于Angular版本，Angular官方已经统一命名&lt;code&gt;Angular 1.x&lt;/code&gt;统称为&lt;c
      
    
    </summary>
    
    
      <category term="Angular CLI" scheme="https://sunshineuun.github.io/tags/Angular-CLI/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis二级缓存应用第三方（Redis）</title>
    <link href="https://sunshineuun.github.io/2018/01/19/Batis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98%E5%BA%94%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%EF%BC%88Redis%EF%BC%89/"/>
    <id>https://sunshineuun.github.io/2018/01/19/Batis二级缓存应用第三方（Redis）/</id>
    <published>2018-01-19T05:48:00.000Z</published>
    <updated>2018-01-19T13:20:02.424Z</updated>
    
    <content type="html"><![CDATA[<h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>使用mybatis时可以使用二级缓存提高查询速度，进而改善用户体验。 使用redis做mybatis的二级缓存可内存可控&lt;如将单独的服务器部署出来用于二级缓存&gt;，管理方便。</p><h5 id="使用思路"><a href="#使用思路" class="headerlink" title="使用思路"></a>使用思路</h5><ul><li>配置redis-applicationContext.xml 设置redis服务连接各参数</li><li>在配置文件中使用标签，设置开启二级</li><li>在需要使用二级h缓存的mapper.xml中使用将cache映射到指定的MybatisRedis类中</li><li>映射类MybatisRedisCache实现MyBatis包中的Cache类，并重写其中各方法； 在重写各方法体中，使用redisFactory和redis服务建立连接，将缓存的数据加载到指定的redis内存中(putObject方法)或将redis 服务中的数据从缓存中读取出来(getObject方法)； 在redis服务中写入和加载数据时需要借用spring-data-redis.jar中JdkSerializationRedisSerializer.class中的序列化(serialize) 和反序列化方法(deserialize),此为包中封装的redis默认的序列化方法；</li><li>映射类中的各方法重写完成后即可实现mybatis数据二级缓存到redis服务中</li></ul><h5 id="代码实践"><a href="#代码实践" class="headerlink" title="代码实践"></a>代码实践</h5><ul><li><p>配置redis-applicationContext.xml<br><img src="/images/pasted-21.png" alt="upload successful"></p></li><li><p>mybatis-config.xml配置开启二级缓存<br><img src="/images/pasted-22.png" alt="upload successful"></p></li><li><p>在mapper.xml中映射缓存类MybatisRedisCache<br><img src="/images/pasted-23.png" alt="upload successful"></p></li><li><p>实现<a href="/files/MybatisRedisCache.java">MybatisRedisCache</a>接口</p></li><li><p>使用中间类<a href="/files/RedisCacheTransfer.java">RedisCacheTransfer</a>解决MybatisRedisCache.jedisConnectionFactory的静态注入。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h5&gt;&lt;p&gt;使用mybatis时可以使用二级缓存提高查询速度，进而改善用户体验。 使用redis做mybatis的二级缓存可内存可控&amp;lt;如将单独的服
      
    
    </summary>
    
    
      <category term="Mybatis" scheme="https://sunshineuun.github.io/tags/Mybatis/"/>
    
      <category term="Redis" scheme="https://sunshineuun.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Next主题之live2d，看板娘，博客宠物</title>
    <link href="https://sunshineuun.github.io/2018/01/19/xt%E4%B8%BB%E9%A2%98%E4%B9%8Blive2d%EF%BC%8C%E7%9C%8B%E6%9D%BF%E5%A8%98%EF%BC%8C%E5%8D%9A%E5%AE%A2%E5%AE%A0%E7%89%A9/"/>
    <id>https://sunshineuun.github.io/2018/01/19/xt主题之live2d，看板娘，博客宠物/</id>
    <published>2018-01-19T05:02:50.000Z</published>
    <updated>2018-01-19T05:17:49.959Z</updated>
    
    <content type="html"><![CDATA[<h5 id="为博客加入看板娘，宠物"><a href="#为博客加入看板娘，宠物" class="headerlink" title="为博客加入看板娘，宠物"></a>为博客加入看板娘，宠物</h5><p>效果图如下：<br><img src="/images/pasted-18.png" alt="upload successful"></p><h5 id="具体实现方法"><a href="#具体实现方法" class="headerlink" title="具体实现方法"></a>具体实现方法</h5><ul><li>live2d插件安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li></ul><p>注意：需要在项目的根目录下执行哦</p><ul><li><p>然后打开<code>Hexo/blog/themes/next/layout</code><br>的<code>_layout.swig</code>,将下面代码放到<code>&lt;/body&gt;</code>之前：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; live2d() &#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后在在 <code>hexo</code> 的 <code>_config.yml</code> 中添加参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  model: wanko</span><br><span class="line">  bottom: -30</span><br></pre></td></tr></table></figure></li><li><p>如果想让宠物在移动端不显示的话再<code>主题配置文件</code>中加入以下代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  model: wanko</span><br><span class="line">  bottom: -30</span><br><span class="line">  mobileShow: false</span><br></pre></td></tr></table></figure></li></ul><p>这样就配置成功了！</p><h5 id="live2d的详细配置解释"><a href="#live2d的详细配置解释" class="headerlink" title="live2d的详细配置解释"></a>live2d的详细配置解释</h5><ul><li>live2d的项目地址在<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">这里</a></li><li><strong>Settings</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line">live2d:</span><br><span class="line">  model: z16 # 展示模型的代码. 默认: z16</span><br><span class="line">  width: 150 # 这个模型的宽度. 默认: 150</span><br><span class="line">  height: 300 # 这个模型的高度. default: 300</span><br><span class="line">  scaling: 1 # 分辨率缩放. default: 2</span><br><span class="line">  opacityDefault: 0.7 # 透明度. default: 0.7</span><br><span class="line">  opacityHover: 1 # The opacity when hover. default: 1</span><br><span class="line">  mobileShow: true #是否在移动设备上显示. default: true</span><br><span class="line">  mobileScaling: 0.5 # The scaling on mobile. default: 0.5</span><br><span class="line">  position: right # 模型所在网页的左边还是右边. default: right</span><br><span class="line">  horizontalOffset: 0 # 横向偏移量. default: 0</span><br><span class="line">  verticalOffset: -20 # 纵向偏移量. default: -20</span><br><span class="line">  id: live2dcanvas # live2d元素的ID. default: live2dcanvas</span><br><span class="line">  deviceJsSource: local # 当前设备脚本的源代码. default: local</span><br></pre></td></tr></table></figure></li></ul><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ol><li><a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">live2d模型预览</a></li><li><a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">live2d项目地址</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;为博客加入看板娘，宠物&quot;&gt;&lt;a href=&quot;#为博客加入看板娘，宠物&quot; class=&quot;headerlink&quot; title=&quot;为博客加入看板娘，宠物&quot;&gt;&lt;/a&gt;为博客加入看板娘，宠物&lt;/h5&gt;&lt;p&gt;效果图如下：&lt;br&gt;&lt;img src=&quot;/images/pasted
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="https://sunshineuun.github.io/2018/01/19/rkdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://sunshineuun.github.io/2018/01/19/rkdown基本语法/</id>
    <published>2018-01-19T04:13:00.000Z</published>
    <updated>2018-01-19T04:58:17.357Z</updated>
    
    <content type="html"><![CDATA[<h5 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h5><p>只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 # 即可，标题字号相应降低。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure></p><p>注：# 和「一级标题」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。</p><h5 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h5><p>列表格式也很常用，在 Markdown 中，你只需要在文字前面加上 -/* 就可以了，例如：</p><ul><li>无序列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 文本1</span><br><span class="line">- 文本2</span><br><span class="line">- 文本3</span><br></pre></td></tr></table></figure><ul><li>有序列表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 文本1</span><br><span class="line">2. 文本2</span><br><span class="line">3. 文本3</span><br></pre></td></tr></table></figure><h5 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h5><p>使用 <code>[显示文本](链接地址)</code> 这样的语法即可，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度传送门](www.baidu.com)</span><br></pre></td></tr></table></figure></p><p>图片插入<code>![](图片链接地址)</code>，图片链接地址可以是相对路径，绝对路径，也可以是网上的资源。</p><h5 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h5><p>引用他人的文字，这个时候引用这个格式就很有必要了，在 Markdown 中，你只需要在你希望引用的文字前面加上 &gt; 就好了，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用演示</span><br></pre></td></tr></table></figure></p><h5 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h5><p>Markdown 的粗体和斜体也非常简单，用两个 <code>*</code> 包含一段文本就是粗体的语法，用一个 <code>*</code> 包含一段文本就是斜体的语法。例如：<br>演示语句：<em>我是斜体</em>，<strong>我是粗体</strong><br>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*我是斜体*，**我是粗体**</span><br></pre></td></tr></table></figure></p><h5 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h5><p>字段的代码用``进行包裹，段落的代码用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 表格</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table><p>```<br>效果如下：</p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h5&gt;&lt;p&gt;只需要在文本前面加上 # 即可，同理、你还可以增加二级标题、三级标题、四级标题、五级标题和六级标题，总共六级，只需要增加 # 即可，标题字号
      
    
    </summary>
    
      <category term="语法" scheme="https://sunshineuun.github.io/categories/%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://sunshineuun.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>GitLab之IP修改</title>
    <link href="https://sunshineuun.github.io/2018/01/19/GitLab%E4%B9%8BIP%E4%BF%AE%E6%94%B9/"/>
    <id>https://sunshineuun.github.io/2018/01/19/GitLab之IP修改/</id>
    <published>2018-01-19T02:35:00.000Z</published>
    <updated>2018-01-19T05:01:05.927Z</updated>
    
    <content type="html"><![CDATA[<h5 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h5><p>虚拟机的IP地址变动了，用新的IP地址直接访问虚拟的gitlab没问题，开发者的项目上修改对应的远程地址也就可以关联上了。但是出现一个问题，如下图所示：<br>项目的下载地址还是原有的IP地址，不是现有IP地址。基于这样的问题给出以下修改。<br><img src="/images/pasted-14.png" alt="upload successful"></p><h5 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h5><p>PS:笔者用的是ubuntu的系统</p><ul><li><p>进入gitlab的配置目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/gitlab/embedded/service/gitlab-rails/config</span><br></pre></td></tr></table></figure></li><li><p>用<code>ls</code>命令查看目录下的文件，如下图：。目录中会包含一个<code>gitlab.yml</code>的文件。<br>  <img src="/images/pasted-15.png" alt="upload successful"></p></li><li><p>打开并修改相关配置，用<code>vi gitlab.yml</code>命令进行打开。将图中host修改成新指定的IP即可。例如我这里就将IP修改为<code>192.168.16.182</code><br>  <img src="/images/pasted-16.png" alt="upload successful"></p></li><li><p><code>gitlab-ctl restart</code>重启服务即可，效果图如下：<br>  <img src="/images/pasted-17.png" alt="upload successful"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h5&gt;&lt;p&gt;虚拟机的IP地址变动了，用新的IP地址直接访问虚拟的gitlab没问题，开发者的项目上修改对应的远程地址也就可以关联上了。但
      
    
    </summary>
    
      <category term="IT" scheme="https://sunshineuun.github.io/categories/IT/"/>
    
      <category term="版本控制" scheme="https://sunshineuun.github.io/categories/IT/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="GitLab" scheme="https://sunshineuun.github.io/tags/GitLab/"/>
    
      <category term="IP" scheme="https://sunshineuun.github.io/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题之NexT</title>
    <link href="https://sunshineuun.github.io/2018/01/18/xo%E6%9B%BF%E6%8D%A2%E4%B8%BB%E9%A2%98%E4%B8%BANexT/"/>
    <id>https://sunshineuun.github.io/2018/01/18/xo替换主题为NexT/</id>
    <published>2018-01-18T03:34:00.000Z</published>
    <updated>2018-01-18T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ul><li><p>下载NexT主题，下载地址请前往<font size="4"><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">这里</a></font>。如下图！或者点击<font size="4"><a href="https://github.com/iissnan/hexo-theme-next/archive/master.zip" target="_blank" rel="noopener">这里</a></font>直接进行下载。</p><p>  <img src="/images/pasted-2.png" alt="upload successful"></p></li><li><p>将下载下来的文件解压，放到根目录下的themes文件夹下。如下图中的next下存储的就是NexT主题。</p><p>  <img src="/images/pasted-4.png" alt="upload successful"></p></li></ul><h5 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h5><p>修改<font size="4">./_config.yml</font>中的theme配置<br><code>theme: next</code></p><h5 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h5><ul><li>前往<a href="https://github.com" target="_blank" rel="noopener">Github</a>创建OAuth App。<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">传送门直接新建</a>，前提需要已经登录了。</li><li><p>打开如下图：</p><p>  <img src="/images/pasted-8.png" alt="upload successful"></p></li><li>Authorization callback URL这一项填写需要谨慎，一般是自己的域名，回调用的，其他随意填写。</li><li><p>会生成如下内容：Client ID和Client Secret</p><p>  <img src="/images/pasted-9.png" alt="upload successful"></p></li><li><p>编辑主题配置文件(_config.yml)，启用评论功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gitment:</span><br><span class="line">  enable: true</span><br><span class="line">  lazy: true #用一个按钮延迟加载评论。</span><br><span class="line">  github_user: #Github ID</span><br><span class="line">  github_repo: #评论存储仓库</span><br><span class="line">  client_id: #在上一步获取的到的</span><br><span class="line">  client_secret: #在上一步获取的到的</span><br></pre></td></tr></table></figure></li><li><p>效果如下：</p><p>  <img src="/images/pasted-10.png" alt="upload successful"></p></li></ul><h5 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h5><p>一下代码都是被注释掉，去掉注释，并且配置对应的图片的路径，图片是支付宝，微信的<font size="5">收款码</font>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reward_comment: I&apos;m not rich, but still hold the dream.</span><br><span class="line">wechatpay: /images/wechatpay.jpg</span><br><span class="line">alipay: /images/alipay.jpg</span><br></pre></td></tr></table></figure></p><h5 id="添加查询功能"><a href="#添加查询功能" class="headerlink" title="添加查询功能"></a>添加查询功能</h5><h6 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h6><ul><li><p>安装<code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>编辑站点配置文件(_config.yml)，新增以下内容到任意位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑主题配置文件(_config.yml)，启用本地搜索功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ul><h5 id="添加字数统计"><a href="#添加字数统计" class="headerlink" title="添加字数统计"></a>添加字数统计</h5><p>效果如图：</p><p><img src="/images/pasted-11.png" alt="upload successful"></p><ul><li><p>安装插件，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure></li><li><p>在主题配置文件(_config.yml)中找到<code>post_wordcount</code>对相关参数做以下配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br></pre></td></tr></table></figure></li></ul><h5 id="添加文章访问量统计之LeanCloud"><a href="#添加文章访问量统计之LeanCloud" class="headerlink" title="添加文章访问量统计之LeanCloud"></a>添加文章访问量统计之LeanCloud</h5><ul><li>前往注册，<a href="https://leancloud.cn/" target="_blank" rel="noopener">传送门</a></li><li>创建一个应用</li><li>进入应用，在左侧导航栏<code>存储</code>中创建一个Class，注意Class的名字必须是<font size="4">Counter</font>，如下图。</li></ul><p><img src="/images/pasted-12.png" alt="upload successful"></p><ul><li>在左侧导航栏<code>设置</code>中<code>应用Key</code>能找到App ID和App Key这两个是要填入Hexo的配置中。</li></ul><p><img src="/images/pasted-13.png" alt="upload successful"></p><ul><li><p>修改Hexo主题配置文件，在文件中找到类似以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https://leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: 对应App ID</span><br><span class="line">  app_key: 对应App Key</span><br></pre></td></tr></table></figure></li><li><p>至此配置成功</p></li></ul><h5 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h5><ol><li><p>打开<code>themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig</code>文件,在以下位置插入这样一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">            if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123;</span><br><span class="line">                alert(&apos;密码错误！&apos;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>插入位置参考下图：<br><img src="/images/pasted-19.png" alt="upload successful"></p></li><li><p>然后向指定文章插入<code>password: password</code><br><img src="/images/pasted-20.png" alt="upload successful"></p></li></ol><h5 id="博文静态资源压缩"><a href="#博文静态资源压缩" class="headerlink" title="博文静态资源压缩"></a>博文静态资源压缩</h5><ul><li><p>插件安装，执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br><span class="line">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span><br></pre></td></tr></table></figure></li><li><p>在项目的根目录中创建<code>gulpfile.js</code>文件，将<font size="4" color="red"><a href="/files/gulpfile.js">这里</a></font>的代码拷贝到创建的<code>gulpfile.js</code>文件中。</p></li><li>生成博文是执行 <code>hexo g &amp;&amp; gulp</code></li></ul><h5 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h5><h6 id="Next主题标签，分类，关于界面打开出现404的情况。"><a href="#Next主题标签，分类，关于界面打开出现404的情况。" class="headerlink" title="Next主题标签，分类，关于界面打开出现404的情况。"></a>Next主题标签，分类，关于界面打开出现404的情况。</h6><p>1.1创建标签导航</p><ul><li>在Hexo项目的根目录下打开CMD命令执行以下命令<br><code>hexo new page &quot;tags&quot;</code></li><li>执行结束后，会在./source文件夹下出现一个<font size="4">tags</font>文件夹里面默认有一个index.md的文件，这就是我们创建的导航栏的分类页面</li><li>对index.md进行修改代码如下，重复部分忽略：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2018-01-18 11:20:02</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ul><p>1.2创建分类导航</p><ul><li>在Hexo项目的根目录下打开CMD命令执行以下命令<br><code>hexo new page &quot;categories&quot;</code></li><li>执行结束后，会在./source文件夹下出现一个<font size="4">categories</font>文件夹里面默认有一个index.md的文件，这就是我们创建的导航栏的分类页面</li><li>对index.md进行修改代码如下，重复部分忽略：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2018-01-18 11:20:02</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ul><p>1.3创建关于导航</p><ul><li>在Hexo项目的根目录下打开CMD命令执行以下命令<br><code>hexo new page &quot;about&quot;</code></li><li>执行结束后，会在./source文件夹下出现一个<font size="4">about</font>文件夹里面默认有一个index.md的文件，这就是我们创建的导航栏的分类页面</li><li>对index.md进行修改代码如下，重复部分忽略：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 关于</span><br><span class="line">date: 2018-01-18 11:20:02</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure></li></ul><hr><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT官方</a></li><li><a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">NexT第三方服务集成</a></li><li><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">个性化配置参考</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载NexT主题，下载地址请前往&lt;font size=&quot;4&quot;&gt;&lt;a href=&quot;https://github.com/ii
      
    
    </summary>
    
      <category term="Blog" scheme="https://sunshineuun.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://sunshineuun.github.io/tags/NexT/"/>
    
      <category term="NexT优化" scheme="https://sunshineuun.github.io/tags/NexT%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo搭建个人博客</title>
    <link href="https://sunshineuun.github.io/2018/01/17/GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://sunshineuun.github.io/2018/01/17/GitHub-Hexo搭建个人博客/</id>
    <published>2018-01-17T06:22:00.000Z</published>
    <updated>2018-01-18T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h5 id="1-拥有一个GitHub账号"><a href="#1-拥有一个GitHub账号" class="headerlink" title="1.拥有一个GitHub账号"></a>1.拥有一个GitHub账号</h5><p><a href="https://github.com" target="_blank" rel="noopener">前往</a>以下地址进行申请</p><hr><h5 id="2-创建博客仓库"><a href="#2-创建博客仓库" class="headerlink" title="2.创建博客仓库"></a>2.创建博客仓库</h5><h6 id="2-1-New-respository"><a href="#2-1-New-respository" class="headerlink" title="2.1 New respository"></a>2.1 New respository</h6><p><img src="/images/pasted-0.png" alt="pasted-0.png"></p><h6 id="2-2-填写信息"><a href="#2-2-填写信息" class="headerlink" title="2.2 填写信息"></a>2.2 填写信息</h6><ul><li>标注【1】处填写github_username.github.io。</li><li>github_username用自己的用户名称代替。</li><li>点击【Create repository】创建仓库。至此github的仓库创建好了。<br><img src="/images/pasted-1.png" alt="pasted-1.png"></li></ul><hr><h5 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h5><h6 id="3-1安装Node-js"><a href="#3-1安装Node-js" class="headerlink" title="3.1安装Node.js"></a>3.1安装Node.js</h6><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js官方下载地址</a>，并且配置环境变量。</li><li><a href="https://baidu.com" target="_blank" rel="noopener">Windows环境变量配置</a>,目前没有编写博客，后续补充。</li><li><a href="https://baidu.com" target="_blank" rel="noopener">Liunx环境变量配置</a>,目前没有编写博客，后续补充。<h6 id="3-2设置npm淘宝镜像站点"><a href="#3-2设置npm淘宝镜像站点" class="headerlink" title="3.2设置npm淘宝镜像站点"></a>3.2设置npm淘宝镜像站点</h6></li><li>npm默认源的下载速度可能很慢，建议使用淘宝镜像替换。</li><li>执行下面命令，将npm的源设置成淘宝镜像站点<br><code>npm config set registry &quot;https://registry.npm.taobao.org&quot;</code></li><li>配置Node.js的环境变量</li></ul><h6 id="3-2安装Hexo"><a href="#3-2安装Hexo" class="headerlink" title="3.2安装Hexo"></a>3.2安装Hexo</h6><ul><li>执行一下命令安装Hexo，Hexo是安装在shell打开的当前路径下的<br><code>npm install hexo-cli g</code></li><li>初始化博客，初始化的博客是在shell打开的当前路径下创建目录<br><code>hexo init blog</code></li><li>进入blog的主目录中<br><code>cd blog</code></li><li>安装Hexo扩展插件<br><code>npm install</code></li><li>安装其它插件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br><span class="line"># 可视化博客编辑插件</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line"># git发布插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li></ul><p>至此安装完毕！！！</p><hr><h5 id="4-Hexo基本使用"><a href="#4-Hexo基本使用" class="headerlink" title="4.Hexo基本使用"></a>4.Hexo基本使用</h5><h6 id="4-1启用Hexo服务"><a href="#4-1启用Hexo服务" class="headerlink" title="4.1启用Hexo服务"></a>4.1启用Hexo服务</h6><ul><li>静态页面生成<br><code>hexo generate</code></li><li>启动本地服务<br><code>hexo server</code></li><li>打开浏览器，地址栏中输入：[<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ],应该可以看见刚刚创建的博客了</li></ul><h6 id="4-2问题答疑"><a href="#4-2问题答疑" class="headerlink" title="4.2问题答疑"></a>4.2问题答疑</h6><ul><li>如果出现无法访问的情况，可能是4000这个端口被占用了。解决方式，关闭服务，修改端口，再次启动服务器。相关代码如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 修改端口</span><br><span class="line">hexo s -p 5000</span><br><span class="line"># 关闭服务</span><br><span class="line">Ctrl+C</span><br></pre></td></tr></table></figure></li></ul><hr><h5 id="5-将Hexo博客部署到GitHub上"><a href="#5-将Hexo博客部署到GitHub上" class="headerlink" title="5.将Hexo博客部署到GitHub上"></a>5.将Hexo博客部署到GitHub上</h5><h6 id="5-1配置"><a href="#5-1配置" class="headerlink" title="5.1配置"></a>5.1配置</h6><ul><li><p>修改配置文件blog/_config.yml，修改deploy项的内容，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  # 类型</span><br><span class="line">  type: git</span><br><span class="line">  # 仓库的地址</span><br><span class="line">  repo: https://github.com/Sunshineuun/Sunshineuun.github.io.git</span><br><span class="line">  # 分支</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li><li><p>注意：yml的语法要求各个标签【:】分号必须有空格。</p></li><li>注意：repo是对应仓库的地址，在<code>hexo deploy</code>的时候会提示输入密码。</li></ul><h6 id="5-2部署"><a href="#5-2部署" class="headerlink" title="5.2部署"></a>5.2部署</h6><ul><li><p>执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清空静态页面</span><br><span class="line">hexo clean</span><br><span class="line"># 生成静态页面</span><br><span class="line">hexo generate</span><br><span class="line"># 部署 </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>打开网页，输入<a href="http://github_username.github.io" target="_blank" rel="noopener">http://github_username.github.io</a> ，打开github上托管的博客。如我的博客地址是：<a href="http://Sunshineuun.github.io。" target="_blank" rel="noopener">http://Sunshineuun.github.io。</a></p></li></ul><hr><h5 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h5><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT官网</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h5 id=&quot;1-拥有一个GitHub账号&quot;&gt;&lt;a href=&quot;#1-拥有一个GitHub账号&quot; class=&quot;headerlink&quot; title=&quot;1.拥有一个GitHub账号&quot;&gt;&lt;/a&gt;1.拥有一个GitHub账号&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://
      
    
    </summary>
    
      <category term="Blog" scheme="https://sunshineuun.github.io/categories/Blog/"/>
    
    
      <category term="GitHub" scheme="https://sunshineuun.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo可视化编辑</title>
    <link href="https://sunshineuun.github.io/2018/01/17/HelloWorld/"/>
    <id>https://sunshineuun.github.io/2018/01/17/HelloWorld/</id>
    <published>2018-01-17T05:54:00.000Z</published>
    <updated>2018-01-18T03:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="后端管理插件hexo-admin"><a href="#后端管理插件hexo-admin" class="headerlink" title="后端管理插件hexo-admin"></a>后端管理插件hexo-admin</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">插件可以直接在网页端创建、编辑markdown文章内容，并将内容发布到_posts里，提供标签，分类配置。</span><br></pre></td></tr></table></figure><h6 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 安装插件</span><br><span class="line">npm install --save hexo-admin</span><br><span class="line"># 启动服务</span><br><span class="line">hexo server -d</span><br><span class="line"># 登陆地址</span><br><span class="line">open http://localhost:4000/admin/</span><br></pre></td></tr></table></figure><p>登陆查看即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;后端管理插件hexo-admin&quot;&gt;&lt;a href=&quot;#后端管理插件hexo-admin&quot; class=&quot;headerlink&quot; title=&quot;后端管理插件hexo-admin&quot;&gt;&lt;/a&gt;后端管理插件hexo-admin&lt;/h5&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="GitHub" scheme="https://sunshineuun.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="https://sunshineuun.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://sunshineuun.github.io/2018/01/17/hello-world/"/>
    <id>https://sunshineuun.github.io/2018/01/17/hello-world/</id>
    <published>2018-01-17T03:09:40.442Z</published>
    <updated>2018-01-17T03:09:40.449Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
